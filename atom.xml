<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[残剑]]></title>
  <link href="http://txgcwm.github.io/atom.xml" rel="self"/>
  <link href="http://txgcwm.github.io/"/>
  <updated>2014-07-14T23:01:00+08:00</updated>
  <id>http://txgcwm.github.io/</id>
  <author>
    <name><![CDATA[残剑]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[山林与野孩]]></title>
    <link href="http://txgcwm.github.io/blog/2014/07/14/shan-lin-yu-ye-hai/"/>
    <updated>2014-07-14T22:59:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/07/14/shan-lin-yu-ye-hai</id>
    <content type="html"><![CDATA[<p>他没有琴棋书画的才艺，却有一个幸福精彩的童年，每当听他讲起儿时的生活，都让我羡慕不已，尤其是他栩栩如生地描述他和山林间故事的时候。</p>

<p>他出生在一个山里的小地方，他的家在半山腰下，家的后面有几户人家，再后面一点就是山林了，家门口是一片小竹林，竹子上留有他的名字（或许那些竹子也早已被砍掉了），也曾在竹子间搭建过小屋，爬竹子是他经常的一项活动，经常从这棵爬到另外一棵，当然他每次都是小心翼翼地，不是担心自己的安全，更多的是防止被他的母亲抓到，抓到后的滋味并不好受，纤细的竹枝落在身上的疼痛不是一时能够抚平的，虽然有很多次的教训，可他还是乐此不疲。从竹子上摔下来的事情也不是没有发生过，但他每次也只是拍拍身上的尘土重新来过，真的疼了，就休息一会，或者是下次继续。</p>

<p>上了三年级，他每天需要徒步三、四里到村里的小学上学，每次放学他总喜欢翻越学校后面的山回家。尽管后山有坟场，却也不能让他产生畏惧。他清楚在哪些时节，山上的地里会长一些水果，如果没有人的话，他可以顺手摘一些，解解馋，他告诉我他最喜欢吃那些嫩嫩的豌豆了。</p>

<p>母亲买来了两头羊，在周末和假期的时候，它们就是他的伙伴，他带着它两跑窜在各个山头。他说，羊最大的愿望就是能够找到丰盛的草，然后美美地吃上一顿，而他的乐趣就是在山里跑来跑去，他把自己的乐趣强加到了羊的身上，却始终没有顾及过它们的感受，带着它们四处乱跑，有时羊不愿往上爬，他也是硬把它们拉了上去，同他一起欣赏远方的美景。每每提到此，他都会傻笑不止。有时他自己玩得尽兴，却把羊给放丢了，它们没有吃饱，只能去祸害邻居的庄稼了，搞得他的母亲不得不向别人道歉，当然他也不能逃脱他母亲的惩罚。</p>

<!--more-->


<p>夏天的时候，他带着这两个小伙伴躲到山林间乘凉，然后尽情地在树上爬来爬去，偶尔会采摘些山里的野山参回家泡茶喝。当然他最喜欢的还是秋天这个丰收的季节，他可以和其他的一些小伙伴站在山顶对着山脚下在收割稻谷的大人们大喊大叫，他们不惧怕被认出来，因为他们躲在林间人们根本看不到。口渴了就跑到山上的地里，去“偷”一些番薯，即便被发现了，他们也能够很快地躲回到山里，然后逃之夭夭，那些大人们根本追赶不上他们。他也经常遥望远处的电视塔，想象着外面精彩的世界。</p>

<p>他也并非也只想着自己，每次他也会注意他的两个小伙伴喜欢吃些什么，然后会采摘一些带回家，一来可以给它们当“零食”，二来那些枝条被晒干后可以被当作柴火烧。</p>

<p>听他的描述，我觉得他的那两个小伙伴是非常“厌恶”他的，他偶尔也会学着电视上的那些英雄，把那两头可怜的羊当作马来骑。羊那么瘦小，又怎能承载他的重量呢？所以，它们每次也是采取坚决不合作的态度。时间久了，它们也就有了应付他的方法，只要他骑上它们就不动，搞得他也无可奈何，最后不了了之。</p>

<p>时间过得很快，小学毕业后他去了邻镇的中学上学，从此以后就是在过年或者是老家的亲人办理红白喜事的时候回来一下，住上一两天。时间虽短，但有闲余的时间他还是会选择独自一人到那些小山走走，去怀念一下童年的生活，寻找远去的记忆。</p>

<p>上大学，然后参加工作，就更少回到老家了，而且停留的时间更少。有一年回家，发现山里的书被剃了个光，没有树木的映衬，山显得那么的矮小。是他长大了，还是山变小了？这个问题连他自己都回答不清楚。叔叔告诉他山上将被种上茶树，作为一个农产品基地，听到这个消息的他，显然是很失望的，家乡最能让他留恋的地方都被糟蹋了，从此连一个寻找记忆的地方都没有了。老屋倒塌了，新房（其实也很老了）也长期每人居住，大山被破坏了，除了这里的亲人，他找不出更多回到这里的理由。</p>

<p>前些日子，他的堂妹在空间放了一张照片，起初他以为是她出去玩时拍下的，也并不是那么好看，看了一些评论后才恍然间明白过来，那就是自己的家乡。山的一头长出了茶树，而另一头还是光秃秃的，水库还是那个水库。一张普通得不能再普通的照片，却勾起了他无限的回忆。</p>

<p>曾经山里的那个野孩子长大了，也走出了那片生他养他的故土，可昔时的美景也已被利益驱走，再也回不来。家是一个待久了会让人厌烦的地方，却也是游子每天思念千遍的地方，无论它变成什么样，始终承载着儿女们对它的依恋和爱！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[徽杭古道行]]></title>
    <link href="http://txgcwm.github.io/blog/2014/07/13/hui-hang-gu-dao-xing/"/>
    <updated>2014-07-13T23:55:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/07/13/hui-hang-gu-dao-xing</id>
    <content type="html"><![CDATA[<p><img src="http://www.clvyou.com/d/file/zb/anhui/jx/lyjd/2012-01-16/36d1c0e672d3450cc7a26c1a22db0c22.jpg" alt="alt text" /></p>

<p>按照老妈的话讲就是“吃饱了撑着没事去爬山啊，要是喜欢爬，可以回去爬老家的山嘛，反正现在我们家的天地也空着”，我清楚母亲是不希望我待在家乡的山沟里的，只是她对那种生活看不到希望，一直以来都鼓励我走出去。就我来说，我也并不喜欢那种生活，小时候母亲让我挑一些轻便的东西的时候，我总是躲避或者是找各种理由推脱。小时候母亲之所以会那么做，主要还是想让我体验一下农村的艰苦生活，可那时我并不懂得这些。和家乡的很多同龄人相比，我的童年并没有做太多的农活。那时的我喜欢在山林间乱窜，却不愿身上有任何的负担，我清楚那种滋味让人难受。</p>

<p>长大后的自己，还是喜欢行走在山林间，时而就有去爬山的冲动。现在不会有人强迫我挑担子，也就淡忘了那种艰辛的滋味。每次爬山，不知疲惫，或许只是为了探寻远去的生活，让自己有所警醒。</p>

<!--more-->


<p>坐汽车朝黄山那边方向去，有三次，那里的海拔比杭州这边高很多，如果现在的道路是基于古时道路修建的话，从古徽州府到杭州是很长的一段路，而且路未必好走，那么就需要另辟捷径了，徽杭古道也就应运而生。虽是山路，但它却大大缩短了徽杭来回的时间。在这条道路上，走过了很多的名人，包括红顶商人胡雪岩和新文化运动的倡导者胡适。徽州这个地方出了太多的名人，这跟地理位置也应该有很大的关系——穷则变，变则通，通则达，古时徽杭古道附近的村民会在每年固定的时间无偿地去修理这条古道。</p>

<p>去的那天是阴雨天气，我也被同去九华山的小伙伴戏称成“雨神”。我们从浙江段开始爬，好处是上山段比较的短，接着大部分都是下山的道路，而且比较的平缓，这让我们轻松很多，那一天也就我们那个对是那样爬的。全长20多公里，没有负重的情况下，很容易走完。虽是雨天，但迎面而来的其他旅者也是络绎不绝，天气是阻挡不了这群人的热情，这让我觉得这不是一条孤独的道路。</p>

<p>道路是在半山腰中，农家也是零散的建在路边，问了才知道，原来大部分的房子建在了山上，走在路上的我们根本无法看到。因为地理位置的原因，这里并没有多少平坦的地，稍微平整的道路就会被村民平成地，用来种植一些蔬菜和其它一些农作物。山中的人依然保持着他们的淳朴，我们在他们的家里避雨，也是很热情，跟我们谈论这里的旅游，还有社会上琐碎的事情。</p>

<p>走在这条道路上，我始终有个疑问：在这条车不能进的山路里为何还有这么多人居住着，他们又是靠什么生活的？禁不起这种疑惑，我咨询了路边买东西的一位老年人：“我看这山里人还是很多的嘛，你们是种植什么作物的啊，我看这里也不能种植水稻呀？”他回道：“我们这里就种一些茶叶、玉米，早些时候还种一点水稻，但现在我们不种了，粮食基本到外面买。”种水稻这事是最让我惊奇的，这个大山里竟然也能够做到。从外面买米，要运进来也不是一件容易的事情，和他聊完后，我花费了半个多小时才走到了景区的出口，再走到集市的话估计又要花费更长的时间。</p>

<p>雨天加上是短途自助出行，没有认识其他的一些小伙伴，只对两个人映像特别深刻：一个是海宁自己开公司搞旅游的老板，这次出行是为了学习搞户外活动的流程，他说“不要拘谨，大家到户外玩本身就是为了放松的”；一个是司机，很幽默，在电话中会跟我们的领队开玩笑，把领导搞得很紧张，不单是这些，当然还有很多让我产生敬畏的亮点。</p>

<p>有一条道路我并没有游览过，但这并不能成为我的遗憾，我相信自己还会再去一次，下一次我想我会从安徽段开始，去体验一下不同的行程。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[沉寂的岁月]]></title>
    <link href="http://txgcwm.github.io/blog/2014/07/12/chen-ji-de-sui-yue/"/>
    <updated>2014-07-12T23:38:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/07/12/chen-ji-de-sui-yue</id>
    <content type="html"><![CDATA[<p>自己都没有为沉寂一个月找到一个合适的理由，或许这只是一个对自己小小的许诺，它的意义可能就是如此。过去小小的一段日子里因为没有发布什么信息而不用去关注朋友回复的信息，其实个体的存在根本不会有多少人会在意你，即便有那么一天你悄悄的离开了这个世界，除非你那天已经强大到足够让人去回忆。可是该死的托和欺诈电话还是不停地往我这里打，我不知道我上辈子到底“骗”了他们多少钱了。</p>

<p>过去的一段时间，心情有些不好，幸亏有@语文书 的指点，让我能够从世俗中缓拖出来，让自己明白了一些道理，褪去了一些幼稚。有所成长，但我始终认为我还是很幼稚，我甚至不愿脱离这种状态，总觉得这样活着才会让自己更快乐，又何必去考虑那些繁杂的事情。</p>

<p>有两本书从去年开始看，终于在过去的一个月里把它们看完了，其实书并不厚，每本就两百多页。我看书不快，总是一个字一个字看过去（真心羡慕那些一目十行的阅读者）。读书最大的体会就是对“读万卷书不如行万里路”这句话的理解：当你读到别人文字的时候，你觉得很有道理，时而会不停地点头，一旦放下就会遗忘；可当你真正做过、体会一件事情后，去阅读别人写的文字，有的不仅仅是赞同，更多的是自身反省后的体会，这是一种财富，将会伴随着你的一生，为以后的决断作判断的依据。最近在看《创客》一书，对我的触动比较大，虽然还未投身到这个行列中去，却始终认为我们这个时代会迎来第三次工业革命。当我们抱怨缺乏机会的时候，它们可能已悄悄地来到我们身边，只是当我们选择不理会它们的时候，它们又悄悄地离开了。这个时代赋予了我们太多的机会，我们又是否意识到了它们的橄榄枝呢？</p>

<!--more-->


<p>工作上也并不是自己预期的那样，一切跟自己想象的差别太大，或许是我太理想了。当一个人或一个团队不求改变的时候，这是一件让人恐惧的事情，变革才是发展的源动力。《重构 改善既有代码的设计》（建议码农去看看，会有所收获的）一书中提到“如果它没坏，就不要动它”（该书的作者极其反对这种做法），很多人都会觉得不应该有这样的一种态度，但没有多少人想尝试改变。有人会觉得这事不可能，问题存在的时候总是会去改变的。这或许只有一个人身处一个环境的时候，才会知道改变并不是一件简单的事情。</p>

<p>期间去了一趟徽杭古道，算是出去散心，尽管是在雨中不停地徒步，但依旧让我感到惬意，这是一种远离，更是一种逃脱。遇到一些人，他们都褪去了原本的外衣，让人感受到最多的是真诚，任何人都无需掩饰什么，尽情地表达自我。我喜欢这样没有拘束的旅行，如果有机会，我会选择走得更远，去认识这世上每一个友善的人，去体验每一种平凡而又让人愉悦的生活。</p>

<p>某晚和公司一位同事聊了一路，记住了她提到的“静水深流”，可能我追求的只是表层的绚丽，而内在的一切都是空洞的，当海水退去的时候，我或许就是那个裸泳者，一个伪程序员，一个伪户外者，一个伪骑行者，一个伪书写者。应该说，至今我都没有找到那个真正的自己。思考的太多，而实际践行的又太少，静下做一件事情，这或许就是我应该去做的。</p>

<p>九华山行程的第一晚，我们玩了卧底游戏，当我提到了“沙县”，在场的女孩笑了，我不明了为什么（当我询问它们的时候，她们似乎也说不出之所以然），所以一直有请她们去“奢侈”一顿的想法，我甚至都为这样一次聚会设计好了类似电影的画面，可实际的效果并没有我预期想象的那么美好，或许应该把这个责任推到可恶的燥热天气上（这是为自己找借口）。</p>

<p>使用“多听”听了不少关于历史的音频，包括王安石、曾国藩、胡雪岩、苏秦、张仪、拿破仑，等等。总觉得听这些的时候，可以去做一些其它的事情，可事实并不是这样，还是需要静下心听才能真正体会那些艰辛的历史。人们总是看到那些人光鲜的一面，却淡化了他们奋斗的历程。</p>

<p>记录是为过往的记忆作备忘，可能我永远不会再次翻看它，但它永远不会消失，人的成长就是依靠这些琐碎不断地堆积。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RobotsBrain: log输出]]></title>
    <link href="http://txgcwm.github.io/blog/2014/07/10/robotsbrain-logshu-chu/"/>
    <updated>2014-07-10T22:09:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/07/10/robotsbrain-logshu-chu</id>
    <content type="html"><![CDATA[<p>在构建一个库的时候，通常会写专门的log输出函数，下面介绍一个简单的实现。根据不同的需求，需要对日志的输出作一个级别限定，便于查阅及跟踪流程。以下是对级别的设置：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>typedef enum log_level_en {
</span><span class='line'>  RB_LOG_MIN,
</span><span class='line'>  RB_LOG_DEBUG,
</span><span class='line'>  RB_LOG_INFO,
</span><span class='line'>  RB_LOG_NOTICE,
</span><span class='line'>  RB_LOG_WARNING,
</span><span class='line'>  RB_LOG_ERROR,
</span><span class='line'>  RB_LOG_CRIT,
</span><span class='line'>  RB_LOG_ALERT,
</span><span class='line'>  RB_LOG_EMERG,
</span><span class='line'>  RB_LOG_MAX
</span><span class='line'>}log_level;</span></code></pre></td></tr></table></div></figure>


<p>该部分参考内核的级别设定，不同的是数值越低其信息的重要程度越低。</p>

<p>具体的日志输出，我们采用了宏定义的方式，因为考虑到要输出<code>__FUNCTION__</code>等信息，其具体的实现如下所示：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#define RB_LOG(level, fmt, args...)  \
</span><span class='line'>  do {    \
</span><span class='line'>      if(rb_log_check_level(level) == 0)  \
</span><span class='line'>          break;  \
</span><span class='line'>      char rb_log_buf[RB_LOG_BUFFER_LEN] = {0};   \
</span><span class='line'>      snprintf(rb_log_buf, RB_LOG_BUFFER_LEN, "pid(%d) %s %s(%d)", \
</span><span class='line'>                  getpid(), __FILE__, __FUNCTION__, __LINE__);    \
</span><span class='line'>      rb_log_printf(level, rb_log_buf, fmt, ##args);  \
</span><span class='line'>  } while(0)</span></code></pre></td></tr></table></div></figure>


<p>每个级别输出的宏定义如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#define RB_DEBUG(fmt, args...)   RB_LOG(RB_LOG_DEBUG, fmt, ##args)
</span><span class='line'>
</span><span class='line'>#define RB_INFO(fmt, args...) RB_LOG(RB_LOG_INFO, fmt, ##args)
</span><span class='line'>
</span><span class='line'>#define RB_NOTICE(fmt, args...)   RB_LOG(RB_LOG_NOTICE, fmt, ##args)
</span><span class='line'>  
</span><span class='line'>#define RB_WARNING(fmt, args...)  RB_LOG(RB_LOG_WARNING, fmt, ##args)
</span><span class='line'>
</span><span class='line'>#define RB_ERROR(fmt, args...)    RB_LOG(RB_LOG_ERROR, fmt, ##args)
</span><span class='line'>
</span><span class='line'>#define RB_CRIT(fmt, args...) RB_LOG(RB_LOG_CRIT, fmt, ##args)
</span><span class='line'>
</span><span class='line'>#define RB_ALERT(fmt, args...)    RB_LOG(RB_LOG_ALERT, fmt, ##args)
</span><span class='line'>
</span><span class='line'>#define RB_EMERG(fmt, args...)    RB_LOG(RB_LOG_EMERG, fmt, ##args)</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>初始化函数，用于设置输出文件的名称和输出级别的设定：如果<code>log_file</code>设置成<code>NULL</code>的话，则直接将信息打印到<code>stderr</code>；<code>level</code>的值设置的越小，它输出的信息越多:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>void rb_log_init(const char *log_file, log_level level);</span></code></pre></td></tr></table></div></figure>


<p>释放分配的资源，如果调用了<code>rb_log_init</code>就必须调用以下的接口:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>void rb_log_uninit(void);</span></code></pre></td></tr></table></div></figure>


<p>检测是否要打印信息:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>int rb_log_check_level(log_level level);</span></code></pre></td></tr></table></div></figure>


<p>日志输出:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>void rb_log_printf(log_level level, const char *prefix, const char *fmt, ...);</span></code></pre></td></tr></table></div></figure>


<p>当然我们也可以直接调用<code>RB_DEBUG</code>等接口，这样的话，log信息直接输出到<code>stderr</code>。具体的代码及测试用例，请参考<a href="https://github.com/RobotsBrain/robrain/tree/master/src">这里</a>。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[__FILE__显示全路径的问题]]></title>
    <link href="http://txgcwm.github.io/blog/2014/07/09/file-xian-shi-quan-lu-jing-de-wen-ti/"/>
    <updated>2014-07-09T22:12:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/07/09/file-xian-shi-quan-lu-jing-de-wen-ti</id>
    <content type="html"><![CDATA[<p>在日志中，使用到<code>__FILE__</code>来显示源码的文件名，可它显示了绝对路径，这样使得整个log看起来很长，主要log都显示在了右边，让人看着很是不舒服。查找了半天才知道这是编译造成的，由于编译目录和源码目录不同，所以在实际编译的时候使用的是源码的绝对路径，以致打印出来就是绝对路径了（这样的解释不是很准确，有待改进）。</p>

<p>针对这种现象，使用以下的例子作为测试。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;stdio.h&gt;
</span><span class='line'>
</span><span class='line'>int main(int argc, char **argv)
</span><span class='line'>{
</span><span class='line'>  printf("%s, %d\n", __FILE__, __LINE__);
</span><span class='line'>
</span><span class='line'>  return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>使用源码的全路径编译：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gcc -o filetest /srv/example/c/test/filetest.c</span></code></pre></td></tr></table></div></figure>


<p>执行结果：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./filetest 
</span><span class='line'>/srv/example/c/test/filetest.c, 5</span></code></pre></td></tr></table></div></figure>


<p>为了解决以上问题，当然可以改变编译的方式：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gcc -o filetest filetest.c</span></code></pre></td></tr></table></div></figure>


<p>执行结果：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./filetest 
</span><span class='line'>filetest.c, 5</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>可对项目而言，改动一下会牵动很多的东西，那么可以对<code>__FILE__</code>进行一些操作：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#define __FILENAME__ (strrchr(__FILE__, '/') ? (strrchr(__FILE__, '/') + 1):__FILE__)</span></code></pre></td></tr></table></div></figure>


<p>测试代码修改如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#include &lt;string.h&gt;
</span><span class='line'>#include &lt;stdio.h&gt;
</span><span class='line'>
</span><span class='line'>#define __FILENAME__ (strrchr(__FILE__, '/') ? (strrchr(__FILE__, '/') + 1):__FILE__)
</span><span class='line'>
</span><span class='line'>int main(int argc, char **argv)
</span><span class='line'>{
</span><span class='line'>  printf("%s, %d\n", __FILENAME__, __LINE__);
</span><span class='line'>
</span><span class='line'>  return 0;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>执行结果：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./filetest 
</span><span class='line'>filetest.c, 8</span></code></pre></td></tr></table></div></figure>


<p>考虑到以上的操作需要两次执行<code>strrchr</code>，这种方案也被枪毙掉了。最后采取了换行的操作，只是使用脚本去分析log文件时有很大的不便，不能快速定位到哪个文件，毕竟它们显示在不同行上。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Linux下批量将md文件转换为html文件]]></title>
    <link href="http://txgcwm.github.io/blog/2014/07/02/linuxxia-pi-liang-jiang-mdwen-jian-zhuan-huan-wei-htmlwen-jian/"/>
    <updated>2014-07-02T21:39:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/07/02/linuxxia-pi-liang-jiang-mdwen-jian-zhuan-huan-wei-htmlwen-jian</id>
    <content type="html"><![CDATA[<p>要将markdown文件转换成html文件，可以用discount或python-markdown软件包提供的markdown工具。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install discount</span></code></pre></td></tr></table></div></figure>


<p>或</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install python-markdown</span></code></pre></td></tr></table></div></figure>


<p>用discount提供的markdown工具转换：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ markdown -o Release-Notes.html Release-Notes.md</span></code></pre></td></tr></table></div></figure>


<p>用python-markdown提供的markdown_py工具转换：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ markdown_py -o html4 Release-Notest.md &gt; Release-Notes.html</span></code></pre></td></tr></table></div></figure>


<p>如果要生成PDF，可以用python-pisa提供的xhtml2pdf转换：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install python-pisa
</span><span class='line'>$ xhtml2pdf --html Release-Notes.html Release-Notes.pdf</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>也可以在文档目录下放置一个Makefile来自动完成转换过程：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Makefile
</span><span class='line'>
</span><span class='line'>MD = markdown
</span><span class='line'>MDFLAGS = -T
</span><span class='line'>H2P = xhtml2pdf
</span><span class='line'>H2PFLAGS = --html
</span><span class='line'>
</span><span class='line'>SOURCES := $(wildcard *.md)
</span><span class='line'>OBJECTS := $(patsubst %.md, %.html, $(wildcard *.md))
</span><span class='line'>OBJECTS_PDF := $(patsubst %.md, %.pdf, $(wildcard *.md))
</span><span class='line'>
</span><span class='line'>all: build
</span><span class='line'>
</span><span class='line'>build: html pdf
</span><span class='line'>
</span><span class='line'>pdf: $(OBJECTS_PDF)
</span><span class='line'>
</span><span class='line'>html: $(OBJECTS)
</span><span class='line'>
</span><span class='line'>$(OBJECTS_PDF): %.pdf: %.html
</span><span class='line'>    $(H2P) $(H2PFLAGS) $&lt; &gt; $@
</span><span class='line'>
</span><span class='line'>$(OBJECTS): %.html: %.md
</span><span class='line'>    $(MD) $(MDFLAGS) -o $@ $&lt;
</span><span class='line'>
</span><span class='line'>clean:
</span><span class='line'>    rm -f $(OBJECTS)</span></code></pre></td></tr></table></div></figure>


<p>html输出：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ make html</span></code></pre></td></tr></table></div></figure>


<p>pdf输出：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ make pdf</span></code></pre></td></tr></table></div></figure>


<p>如果markdown的内容是中文，那么转换出来的html在浏览器中打开就无法自动识别编码，pdf更惨，直接是一堆乱码。这时可以借助markdown对html标记的支持，在markdown文件中加入编码信息。例如我们要将markdown转换为html文件，可以在文件的开头加上meta标记，指明编码格式：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sed -i '1i\&lt;meta http-equiv="content-type" content="text/html; charset=UTF-8"&gt;' *.md</span></code></pre></td></tr></table></div></figure>


<p>使用以上的方法，转换出来的效果并不理想，所以尝试使用pandoc去转换，在Ubuntu上使用以下指令安装：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get autoremove pandoc
</span><span class='line'>$ sudo apt-get install cabal-install
</span><span class='line'>$ cabal update
</span><span class='line'>$ cabal install pandoc</span></code></pre></td></tr></table></div></figure>


<p>html输出：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pandoc Release-Notest.md -o Release-Notes.html</span></code></pre></td></tr></table></div></figure>


<p>pdf输出：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ pandoc Release-Notest.md -o Release-Notes.pdf</span></code></pre></td></tr></table></div></figure>


<p><big>参考文章</big></p>

<p><a href="http://blog.csdn.net/makenothing/article/details/8450975">Linux下批量将md文件批量转换为html文件</a><br/>
<a href="http://www.ituring.com.cn/article/10044">如何在Linux下使用Markdown进行文档工作</a> <br/>
<a href="http://higrid.net/c-art-pandoc_command.htm">利用Pandoc转换markdown和HTML、LaTeX</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grub Rescue修复方法]]></title>
    <link href="http://txgcwm.github.io/blog/2014/07/01/grubrescuexiu-fu-fang-fa/"/>
    <updated>2014-07-01T23:46:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/07/01/grubrescuexiu-fu-fang-fa</id>
    <content type="html"><![CDATA[<p>在笔记本电脑上安装了两个Linux系统，有一个几乎不用，所以决定把它给删除了，在网上看到<a href="http://www.linuxidc.com/Linux/2014-06/103871.htm">OS-Uninstaller（操作系统卸载）——轻松删除电脑中多余的操作系统</a>一文可以操作成功，就决定试试了。本着学习的态度，边操作边作笔记，把它记录在了<a href="http://txgcwm.github.io/blog/2014/06/30/cao-zuo-xi-tong-xie-zai-ruan-jian-%3Aos-uninstaller/">这里</a>。可天公并不眷恋我这个爱折腾的孩子，操作并没有成功，开机显示如下信息：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>GRUB loading
</span><span class='line'>
</span><span class='line'>error:unknow filesystem
</span><span class='line'>
</span><span class='line'>grub rescue&gt;</span></code></pre></td></tr></table></div></figure>


<p>下面几种操作会导致这种问题：</p>

<ul>
<li>想删除Ubuntu，于是直接在Windows下删除/格式化了Ubuntu所在的分区。</li>
<li>调整磁盘，利用工具合并/分割/调整/删除分区，使磁盘分区数目发生了变化。</li>
<li>重新安装系统，把Linux安装到了新分区，原有分区已经格式化，但是没有重新安装grub2。</li>
<li>用Ubuntu备份工具/衍生版制造工具等，把主分区恢复成了8.X的老版本，结果老版本的grub是grub1,于是把grub2破坏掉了。</li>
</ul>


<p>总归是由于操作者不知道grub2分为两部分，一部分（一般情况下）写在了mbr上，另一部分写在了某个分区的<code>/boot/grub</code>目录（如果<code>/boot</code>单独分区，则直接写在对应分区的<code>/grub</code>目录）里面。由于上述操作，致使grub2的mbr里面的那一部分找不到<code>/grub</code>目录里面的那一部分了（或者另一部分已经删除了）。</p>

<h1>彻底删除grub2，让这个提示不再出现</h1>

<p>适用于已经不想再使用Ubuntu，要转回Windows的人。只要有Windows启动盘（非Ghost），用它启动，至选择安装位置，不用真正安装，退出重启就可以。或者用它启动到故障修复台，运行fixboot或者fixmbr都可以。
win7命令行下，则是执行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>BootRec.exe /fixmbr</span></code></pre></td></tr></table></div></figure>


<p><code>/fixmbr</code>修复mbr，<code>/FixBoot</code>修复启动扇区，<code>/ScanOs</code>检测已安装的win7，<code>/RebuildBcd</code>重建bcd。</p>

<!--more-->


<h1>重新安装、修复grub2</h1>

<h2>先使用<code>ls</code>命令，找到Ubuntu安装在哪个分区</h2>

<p>在grub rescue>下输入以下命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls</span></code></pre></td></tr></table></div></figure>


<p>会罗列所有的磁盘分区信息，比如：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>(hd0,1),(hd0,5),(hd0,3),(hd0,2)</span></code></pre></td></tr></table></div></figure>


<h2>依次调用如下命令： X表示各个分区号码</h2>

<p>如果<code>/boot</code>没有单独分区，用以下命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls (hd0,X)/boot/grub</span></code></pre></td></tr></table></div></figure>


<p>如果<code>/boot</code>单独分区，则用下列命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls （hd0,X)/grub</span></code></pre></td></tr></table></div></figure>


<p>正常情况下，会列出来几百个文件，很多文件的扩展名是<code>.mod</code>、<code>.lst</code>和<code>.img</code>，还有一个文件是<code>grub.cfg</code>。假设找到（hd0,5）时，显示了文件夹中的文件，则表示Linux安装在这个分区。</p>

<h2>如果找到了正确的grub目录，则设法临时性将grub的两部分关联起来</h2>

<p>以下是<code>/boot</code>没有单独分区的命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grub rescue&gt;set root=(hd0,5)
</span><span class='line'>grub rescue&gt;set prefix=(hd0,5)/boot/grub
</span><span class='line'>grub rescue&gt;insmod /boot/grub/normal.mod</span></code></pre></td></tr></table></div></figure>


<p>以下是<code>/boot</code>单独分区的命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grub rescue&gt;set root=(hd0,5)
</span><span class='line'>grub rescue&gt;set prefix=(hd0,5)/grub
</span><span class='line'>grub rescue&gt;insmod /grub/normal.mod</span></code></pre></td></tr></table></div></figure>


<p>为了显示出丢失的grub菜单，需要调用如下命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>grub rescue&gt;normal</span></code></pre></td></tr></table></div></figure>


<p>如果重启后问题依旧存在，则需要进入Linux中对grub进行修复。启动起来，进入Ubuntu之后，在终端执行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo update-grub
</span><span class='line'>$ sudo grub-install /dev/sda</span></code></pre></td></tr></table></div></figure>


<p>sda是硬盘号码，千万不要指定分区号码，例如sda1，sda5等都不对。</p>

<h2>如果找不到正确的/grub目录，则尝试寻找是否有linux核心文件，则依次在<code>grub rescue&gt;</code>下调用如下命令： X表示各个分区号码</h2>

<p>如果<code>/boot</code>没有单独分区：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls (hd0,X)/boot</span></code></pre></td></tr></table></div></figure>


<p>如果<code>/boot</code>单独分区：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls （hd0,X)</span></code></pre></td></tr></table></div></figure>


<p>找名字类似<code>vmlinuz-3.0.0-12-generic</code>这样的文件，这是Linux核心文件，如果找到，记下(hd0,X)中的X值。假设找到（hd0,5）时，显示了文件夹中的文件。</p>

<p>然后用live cd或者live usb启动，在live cd的Ubuntu终端中依次输入以下命令（sda5中的5必须改成上面记录下来数值）：</p>

<p>如果<code>/boot</code>没有单独分区：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo mount /dev/sda5 /mnt
</span><span class='line'>sudo grub-install --boot-directory=/mnt/boot /dev/sda</span></code></pre></td></tr></table></div></figure>


<p>如果<code>/boot</code>单独分区：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo mount /dev/sda5 /mnt
</span><span class='line'>sudo grub-install --boot-directory=/mnt /dev/sda</span></code></pre></td></tr></table></div></figure>


<p>然后重新启动即可。</p>

<p>以上这两句命令也可以解决“安装Ubuntu时grub安装位置不对，没有将grub安装到/dev/sda，造成启动时不出现Ubuntu启动项直接进入Windows”的问题，不过需要自行确定sda5中的5改成什么数字。</p>

<h2>如果连Linux核心文件都没有，那么就得彻底重新安装</h2>

<br></br>  


<p>找到了grub分区的目录，却找不到<code>normal.mod</code>这个文件，所以最后直接借助U盘里的Linux系统来完成修复了。面对这种状况的时候，最坏的打算就是重新安装系统了，可惜的就是那些辛辛苦苦收集的资料了。不过谁让自己瞎折腾的呢？这一切代价都需要自己去承担。不过索性有强大的网络，让我找到了解决的措施，在此感谢那些无私奉献的Linux爱好者辛勤的付出，是他们的存在才让生活更美好！</p>

<br></br> 


<p><big>参考文章</big></p>

<p><a href="http://www.2cto.com/os/201111/112327.html">Grub Rescue修复方法</a> <br/>
<a href="http://blog.sina.com.cn/s/blog_4d6c45250100wxnq.html">grub rescue修复方法</a> <br/>
<a href="http://www.cnblogs.com/samcn/archive/2011/03/30/1999615.html">Ubuntu启动问题以及Grub Rescue修复方法</a> <br/>
<a href="http://blog.csdn.net/jikiwh/article/details/5497900">Grub Rescue来修复Grub 问题</a> <br/>
<a href="http://blog.csdn.net/tody_guo/article/details/7537454">grub rescue模式下启动并修复</a> <br/>
<a href="http://tech.ccidnet.com/art/738/20100803/2140203_1.html">Ubuntu Grub Rescue几种修复方法</a> <br/>
<a href="http://blog.csdn.net/miromelo/article/details/6132702">grub rescue修复</a> <br/>
<a href="http://openwares.net/linux/grub_rescue_unkown_filesystem.html">grub rescue 模式下引导修复</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu系统清理缓存、垃圾、多余内核]]></title>
    <link href="http://txgcwm.github.io/blog/2014/07/01/ubuntuxi-tong-qing-li-huan-cun-%2C-la-ji-%2C-duo-yu-nei-he/"/>
    <updated>2014-07-01T22:51:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/07/01/ubuntuxi-tong-qing-li-huan-cun-,-la-ji-,-duo-yu-nei-he</id>
    <content type="html"><![CDATA[<p>Linux不会产生无用垃圾文件，但是在升级后它不会自动删除缓存中的文件，比较占系统硬盘资源。</p>

<h1>删除缓存</h1>

<h2>清理升级缓存以及无用包的</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get autoclean              清理旧版本的软件缓存
</span><span class='line'>$ sudo apt-get clean                  清理所有软件缓存
</span><span class='line'>$ sudo apt-get autoremove             删除系统不再使用的孤立软件</span></code></pre></td></tr></table></div></figure>


<h2>清理opera/firefox的缓存文件</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ls ~/.opera/cache4
</span><span class='line'>$ ls ~/.mozilla/firefox/*.default/Cache</span></code></pre></td></tr></table></div></figure>


<h2>清理Linux下孤立的包</h2>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install deborphan -y</span></code></pre></td></tr></table></div></figure>


<h2>卸载tracker</h2>

<p>tracker不仅会产生大量的cache文件，而且还会影响开机速度，所以在新得立里面删掉就行。</p>

<!--more-->


<h1>删除软件</h1>

<p>Ubuntu软件的删除一般用<code>Ubuntu软件中心</code>或<code>新得立</code>就能搞定，但用命令更快更好。</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get remove --purge 软件名
</span><span class='line'>$ sudo apt-get autoremove                删除系统不再使用的孤立软件
</span><span class='line'>$ sudo apt-get autoclean                 清理旧版本的软件缓存
</span><span class='line'>$ dpkg -l | grep ^rc | awk '{print $2}' | sudo xargs dpkg -P    清除残余的配置文件保证干净</span></code></pre></td></tr></table></div></figure>


<p>包管理的临时文件目录为<code>/var/cache/apt/archives</code>,没有下载完的在<code>/var/cache/apt/archives/partial</code>。</p>

<h1>删除多余内核</h1>

<ul>
<li>查看当前Ubuntu系统使用的内核；</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ uname -a</span></code></pre></td></tr></table></div></figure>


<ul>
<li>查看所有内核；</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ dpkg --get-selections | grep linux</span></code></pre></td></tr></table></div></figure>


<ul>
<li>小心删除不需要的内核；</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get remove linux-image-2.6.32-22-generic</span></code></pre></td></tr></table></div></figure>


<p><code>linux-image-xxxxxx-generic</code>就是要删除的内核版本，<code>linux-headers-xxxxxx</code>和<code>linux-headers-xxxxxx-generic</code>中间有<code>xxxxxx</code>那段的旧内核都能删，一般选内核号较小的删。</p>

<ul>
<li>清理<code>/usr/src</code>目录，删除已经卸载的内核目录。</li>
</ul>


<br></br>


<p><big>参考文章</big></p>

<p><a href="http://my.oschina.net/zhangqingcai/blog/23994">清理Ubuntu系统的缓存、垃圾、多余内核</a> <br/>
<a href="http://www.2cto.com/os/201304/206100.html">Ubuntu清理boot分区</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[操作系统卸载软件：OS-Uninstaller]]></title>
    <link href="http://txgcwm.github.io/blog/2014/06/30/cao-zuo-xi-tong-xie-zai-ruan-jian-%3Aos-uninstaller/"/>
    <updated>2014-06-30T21:20:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/06/30/cao-zuo-xi-tong-xie-zai-ruan-jian-:os-uninstaller</id>
    <content type="html"><![CDATA[<p>OS-Uninstaller提供了一个图形化的界面，可以清除Windows, MacOS, Ubuntu以及其它的操作系统，可谓是强大又好用。</p>

<p>Ubuntu下通过添加PPA安装，打开终端输入：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo add-apt-repository ppa:yannubuntu/boot-repair</span></code></pre></td></tr></table></div></figure>


<p>然后输入以下内容回车:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo sed 's/trusty/saucy/g' -i /etc/apt/sources.list.d/yannubuntu-boot-repair-trusty.list</span></code></pre></td></tr></table></div></figure>


<p>执行以下命令安装:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get update; sudo apt-get install -y os-uninstaller && os-uninstaller</span></code></pre></td></tr></table></div></figure>


<p>安装完之后，软件会自己启动。</p>

<p>也可以直接下载包含有OS-Uninstaller的镜像刻录使用，点击<a href="http://sourceforge.net/projects/boot-repair-cd/">这里</a>下载。</p>

<!--more-->


<p>该软件需要安装lvm2，可以在软件中心搜索lvm安装。</p>

<p>启动操作系统卸载（OS-Uninstaller的中文名），打开后会看到正在扫描操作系统界面。中间可能会弹出提示<code>Is there RAID on this computer?</code>，一般选否就可以。扫描完成后软件会列出电脑上所有的操作系统，可以选定自己要卸载的操作系统，然后确定。会看到再确认窗口，下面有很多高级选项，选择默认即可，点击应用。接下来的几步很重要，请务必确认操作正确，以免造成损失。</p>

<p>卸载GRUB：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo dpkg --configure -a
</span><span class='line'>$ sudo apt-get install -fy
</span><span class='line'>$ sudo apt-get install -y --force-yes lvm2
</span><span class='line'>$ sudo apt-get purge -y --force-yes grub*</span></code></pre></td></tr></table></div></figure>


<p>执行到最后一个指令的时候，出现以下的错误（还未找到解决措施）：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Reading package lists... Done
</span><span class='line'>Building dependency tree       
</span><span class='line'>Reading state information... Done
</span><span class='line'>Note, selecting 'grub-legacy-doc' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-efi-amd64-bin' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-efi-amd64-dbg' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-emu-dbg' for regex 'grub*'
</span><span class='line'>Note, selecting 'libgruff-ruby' for regex 'grub*'
</span><span class='line'>Note, selecting 'ruby-gruff' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-firmware-qemu' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub2' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-efi-ia32-bin' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-efi-ia32-dbg' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-theme-starfield' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-efi-amd64' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-disk' for regex 'grub*'
</span><span class='line'>Note, selecting 'longrun' for regex 'grub*'
</span><span class='line'>Note, selecting 'fgrun' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub2-common' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-imageboot' for regex 'grub*'
</span><span class='line'>Note, selecting 'libgruff-ruby1.8' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-efi-ia32' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-efi-ia64' for regex 'grub*'
</span><span class='line'>Note, selecting 'kde-config-grub2' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-pc' for regex 'grub*'
</span><span class='line'>Note, selecting 'libgruel3.6.1' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub2-splashimages' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-gfxpayload-lists' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-efi-amd64-signed' for regex 'grub*'
</span><span class='line'>Note, selecting 'libgruff-ruby-doc' for regex 'grub*'
</span><span class='line'>Note, selecting 'espresso-grub' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-ipxe' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-coreboot-bin' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-coreboot-dbg' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-linuxbios' for regex 'grub*'
</span><span class='line'>Note, selecting 'wmlongrun' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-splashimages' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-pc-bin' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-pc-dbg' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-rescue-pc' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-legacy' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-ieee1275' for regex 'grub*'
</span><span class='line'>Note, selecting 'congruity' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-ieee1275-bin' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-yeeloong' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-ieee1275-dbg' for regex 'grub*'
</span><span class='line'>Note, selecting 'grun' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-efi' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-doc' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-invaders' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-emu' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-common' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-coreboot' for regex 'grub*'
</span><span class='line'>Note, selecting 'sabily-grub-artwork' for regex 'grub*'
</span><span class='line'>Note, selecting 'grub-legacy-ec2' for regex 'grub*'
</span><span class='line'>Package 'grub-efi-ia64' is not installed, so not removed
</span><span class='line'>Package 'grub-yeeloong' is not installed, so not removed
</span><span class='line'>Package 'grub-legacy' is not installed, so not removed
</span><span class='line'>Package 'espresso-grub' is not installed, so not removed
</span><span class='line'>Package 'grub-efi-amd64-signed' is not installed, so not removed
</span><span class='line'>Package 'grub' is not installed, so not removed
</span><span class='line'>Package 'grub-common' is not installed, so not removed
</span><span class='line'>Package 'grub-doc' is not installed, so not removed
</span><span class='line'>Package 'grub-efi' is not installed, so not removed
</span><span class='line'>Package 'grub-efi-amd64' is not installed, so not removed
</span><span class='line'>Package 'grub-efi-amd64-bin' is not installed, so not removed
</span><span class='line'>Package 'grub-efi-amd64-dbg' is not installed, so not removed
</span><span class='line'>Package 'grub-efi-ia32' is not installed, so not removed
</span><span class='line'>Package 'grub-efi-ia32-bin' is not installed, so not removed
</span><span class='line'>Package 'grub-efi-ia32-dbg' is not installed, so not removed
</span><span class='line'>Package 'grub-gfxpayload-lists' is not installed, so not removed
</span><span class='line'>Package 'grub-legacy-doc' is not installed, so not removed
</span><span class='line'>Package 'grub-pc-bin' is not installed, so not removed
</span><span class='line'>Package 'grub-pc-dbg' is not installed, so not removed
</span><span class='line'>Package 'grub2-common' is not installed, so not removed
</span><span class='line'>Package 'congruity' is not installed, so not removed
</span><span class='line'>Package 'fgrun' is not installed, so not removed
</span><span class='line'>Package 'grub-coreboot' is not installed, so not removed
</span><span class='line'>Package 'grub-coreboot-bin' is not installed, so not removed
</span><span class='line'>Package 'grub-coreboot-dbg' is not installed, so not removed
</span><span class='line'>Package 'grub-disk' is not installed, so not removed
</span><span class='line'>Package 'grub-emu' is not installed, so not removed
</span><span class='line'>Package 'grub-emu-dbg' is not installed, so not removed
</span><span class='line'>Package 'grub-firmware-qemu' is not installed, so not removed
</span><span class='line'>Package 'grub-ieee1275' is not installed, so not removed
</span><span class='line'>Package 'grub-ieee1275-bin' is not installed, so not removed
</span><span class='line'>Package 'grub-ieee1275-dbg' is not installed, so not removed
</span><span class='line'>Package 'grub-imageboot' is not installed, so not removed
</span><span class='line'>Package 'grub-invaders' is not installed, so not removed
</span><span class='line'>Package 'grub-ipxe' is not installed, so not removed
</span><span class='line'>Package 'grub-linuxbios' is not installed, so not removed
</span><span class='line'>Package 'grub-rescue-pc' is not installed, so not removed
</span><span class='line'>Package 'grub-splashimages' is not installed, so not removed
</span><span class='line'>Package 'grub-theme-starfield' is not installed, so not removed
</span><span class='line'>Package 'grub2' is not installed, so not removed
</span><span class='line'>Package 'grub2-splashimages' is not installed, so not removed
</span><span class='line'>Package 'grun' is not installed, so not removed
</span><span class='line'>Package 'kde-config-grub2' is not installed, so not removed
</span><span class='line'>Package 'libgruel3.6.1' is not installed, so not removed
</span><span class='line'>Package 'libgruff-ruby' is not installed, so not removed
</span><span class='line'>Package 'libgruff-ruby-doc' is not installed, so not removed
</span><span class='line'>Package 'libgruff-ruby1.8' is not installed, so not removed
</span><span class='line'>Package 'longrun' is not installed, so not removed
</span><span class='line'>Package 'ruby-gruff' is not installed, so not removed
</span><span class='line'>Package 'sabily-grub-artwork' is not installed, so not removed
</span><span class='line'>Package 'wmlongrun' is not installed, so not removed
</span><span class='line'>Package 'grub-legacy-ec2' is not installed, so not removed
</span><span class='line'>The following packages will be REMOVED:
</span><span class='line'>  grub-pc*
</span><span class='line'>0 upgraded, 0 newly installed, 1 to remove and 2 not upgraded.
</span><span class='line'>After this operation, 558 kB disk space will be freed.
</span><span class='line'>(Reading database ... 1115878 files and directories currently installed.)
</span><span class='line'>Removing grub-pc ...
</span><span class='line'>dpkg: error processing grub-pc (--purge):
</span><span class='line'> subprocess installed pre-removal script returned error exit status 10
</span><span class='line'>No apport report written because MaxReports is reached already
</span><span class='line'>                                                              Errors were encountered while processing:
</span><span class='line'> grub-pc
</span><span class='line'>E: Sub-process /usr/bin/dpkg returned an error code (1)</span></code></pre></td></tr></table></div></figure>


<p>如果出现选择窗口，可使用Tab键、空格键和回车键以将GRUB安装至希望的磁盘上。</p>

<p>重装GRUB，按照说明操作（空格可以选定安装位置，tab键切换选项，回车确认操作），按前进继续下一步：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install -y --force-yes grub-pc</span></code></pre></td></tr></table></div></figure>


<p>至此，已经完成了所有的操作，剩下来的工作就是软件自动删除要删除的系统，成功后会出现提示信息。卸载完成后重启电脑，确实完全删除。</p>

<p><big>参考文章</big></p>

<p><a href="http://www.linuxidc.com/Linux/2014-06/103871.htm">OS-Uninstaller（操作系统卸载）——轻松删除电脑中多余的操作系统</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[进程优先级控制：nice和renice]]></title>
    <link href="http://txgcwm.github.io/blog/2014/06/28/jin-cheng-you-xian-ji-kong-zhi-%3Anicehe-renice/"/>
    <updated>2014-06-28T14:41:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/06/28/jin-cheng-you-xian-ji-kong-zhi-:nicehe-renice</id>
    <content type="html"><![CDATA[<p>Linux进程调度的目标：</p>

<ol>
<li>高效性：高效意味着在相同的时间下要完成更多的任务，调度程序会被频繁的执行，所以调度程序要尽可能的高效；</li>
<li>加强交互性能：在系统相当的负载下，也要保证系统的响应时间；</li>
<li>保证公平和避免饥渴；</li>
<li>SMP调度：调度程序必须支持多处理系统；</li>
<li>软实时调度：系统必须有效的调用实时进程，但不保证一定满足其要求。</li>
</ol>


<p>Linux给予进程一个优先运行序 (priority, PRI)， 这个PRI值越低代表优先级越高。不过这个PRI值是由核心动态调整的，使用者无法直接调整PRI值。</p>

<p>由于PRI是核心动态调整的，使用者无权去干涉。如果想要调整进程的优先运行序，就要透过Nice值了。一般来说， PRI与NI的相关性如下：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>PRI(new) = PRI(old) + nice</span></code></pre></td></tr></table></div></figure>




<!--more-->


<p>不过要特别留意，如果原本的PRI是50，并不是给予一个<code>nice = 5</code>，就会让PRI变成55，因为PRI是系统动态决定的。所以，虽然nice值可以影响PRI，不过最终的PRI仍是要经过系统分析后才会决定。另外，nice值是有正负的，而既然PRI越小越早被运行，所以当nice值为负值时，那么该进程就会降低PRI值，亦即会被优先处理。此外，必须要留意到：</p>

<ul>
<li>nice值可调整的范围为-20 ~ 19；</li>
<li>root可随意调整自己或他人进程的Nice值，且范围为-20 ~ 19；</li>
<li>一般使用者仅可调整自己进程的Nice值，且范围仅为0 ~ 19(避免一般用户抢占系统资源)；</li>
<li>一般使用者仅可将nice值越调越高，例如本来nice为5，则未来仅能调整到大于5；</li>
<li>一开始运行程序就立即给予一个特定的nice值，用nice命令，例如<code>nice -n 10 ping www.163.com</code>；</li>
<li>调整某个已经存在的PID的nice值，用renice命令，例如<code>renice 19 2251</code>或者<code>renice 19 3675 4103</code>（同时调整多个进程的优先级）;</li>
<li>针对指定用户，把这些用户的进程优先级全部做调整，例如<code>sudo renice 1 -u test</code>或者<code>sudo renice -2 -u test mysql root</code>（调整多个用户的进程优先级）；</li>
<li>优先级会继承，例如当前bash的优先级是81，nice为1，在bash下产生的所有子进程都会继续父进程的优先级。</li>
</ul>


<br></br>


<p><big>参考文章</big></p>

<p><a href="http://www.cnblogs.com/zhaoyl/archive/2012/09/04/2671156.html">Linux进程调度原理</a><br/>
<a href="http://linzhibin824.blog.163.com/blog/static/7355771020135801151813/">进程优先级控制——nice和renice命令</a> <br/>
<a href="http://blog.csdn.net/ganglia/article/details/11028199">进程优先级，进程nice值和%nice的解释</a> <br/>
<a href="http://blog.sina.com.cn/s/blog_53689eaf0101b5xd.html">linux中限制用户进程CPU和内存占用率</a><br/>
<a href="http://www.ibm.com/developerworks/cn/linux/l-cn-shell-monitoring/">使用shell脚本对Linux系统和进程资源进行监控</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GCC编译选项]]></title>
    <link href="http://txgcwm.github.io/blog/2014/06/28/gccbian-yi-xuan-xiang/"/>
    <updated>2014-06-28T11:28:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/06/28/gccbian-yi-xuan-xiang</id>
    <content type="html"><![CDATA[<p>GCC的使用方法：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gcc [-c│-S│-E] [-std=standard]
</span><span class='line'>    [-g] [-pg] [-Olevel]
</span><span class='line'>    [-Wwarn...] [-pedantic]
</span><span class='line'>    [-Idir...] [-Ldir...]
</span><span class='line'>    [-Dmacro[=defn]...] [-Umacro]
</span><span class='line'>    [-foption...] [-mmachine-option...]
</span><span class='line'>    [-o outfile] infile...</span></code></pre></td></tr></table></div></figure>


<hr />

<h1>常用选项</h1>

<ul>
<li>&mdash;help</li>
<li>&mdash;target-help：显示gcc帮助说明，是显示目标机器特定的命令行选项。</li>
<li>&mdash;version：显示gcc版本号和版权信息 。</li>
<li>-o outfile：输出到指定的文件。</li>
<li>-x language：指明使用的编程语言，允许的语言包括：c、c++、assembler、none，none意味着恢复默认行为，即根据文件的扩展名猜测源文件的语言。</li>
<li>-v：打印较多信息，显示编译器调用的程序。</li>
<li>&ndash;###：与-v类似，但选项被引号括住，并且不执行命令。</li>
<li>-E：仅作预处理，不进行编译、汇编和链接。</li>
<li>-S：仅编译到汇编语言，不进行汇编和链接。</li>
<li>-c：编译、汇编到目标代码，不进行链接。</li>
<li>-pipe：使用管道代替临时文件。</li>
<li>-combine：将多个源文件一次性传递给汇编器。</li>
</ul>


<hr />

<h1>其它选项</h1>

<ul>
<li>-l library/-llibrary：进行链接时搜索名为library的库。</li>
<li>-Idir：把dir加入到搜索头文件的路径列表中。</li>
<li>-Ldir：把dir加入到搜索库文件的路径列表中。</li>
<li>-Dname：预定义一个名为name的宏，值为1。</li>
<li>-Dname=definition：预定义名为name，值为definition的宏。</li>
<li>-ggdb</li>
<li>-ggdblevel：为调试器gdb生成调试信息，level可以为1～3，默认值为2。</li>
<li>-g</li>
<li>-glevel：生成操作系统本地格式的调试信息，-g和-ggdb并不太相同，-g会生成gdb之外的信息，level取值同上。</li>
<li>-s：去除可执行文件中的符号表和重定位信息，用于减小可执行文件的大小。</li>
<li>-M：告诉预处理器输出一个适合make的规则，用于描述各目标文件的依赖关系。对于每个源文件，预处理器输出一个make规则，该规则的目标项(target)是源文件对应的目标文件名，依赖项(dependency)是源文件中#include引用的所有文件。生成的规则可以是单行，但如果太长，就用\换行符续成多行。规则显示在标准输出，不产生预处理过的C程序。</li>
<li>-C：告诉预处理器不要丢弃注释，配合-E选项使用。</li>
<li>-P：告诉预处理器不要产生#line命令，配合-E选项使用。</li>
<li>-static：在支持动态链接的系统上，阻止连接共享库。</li>
<li>-nostdlib：不连接系统标准启动文件和标准库文件，只把指定的文件传递给连接器。</li>
</ul>


<!--more-->


<hr />

<h1>Warnings</h1>

<ul>
<li>-Wall：会打开一些很有用的警告选项，建议编译时加此选项。</li>
<li>-W</li>
<li>-Wextra：打印一些额外的警告信息。</li>
<li>-w：禁止显示所有警告信息。</li>
<li>-Wshadow：当一个局部变量遮盖住了另一个局部变量或者全局变量时，给出警告，-Wall并不会打开此项。</li>
<li>-Wpointer-arith：对函数指针或者void *类型的指针进行算术操作时给出警告，-Wall并不会打开此项。</li>
<li>-Wcast-qual：当强制转化丢掉了类型修饰符时给出警告，-Wall并不会打开此项。</li>
<li>-Waggregate-return：如果定义或调用了返回结构体或联合体的函数，编译器就发出警告。</li>
<li>-Winline：无论是声明为inline或者是指定了-finline-functions选项，如果某函数不能内联，编译器都将发出警告。</li>
<li>-Werror：把警告当作错误，出现任何警告就放弃编译。</li>
<li>-Wunreachable-code：如果编译器探测到永远不会执行到的代码，就给出警告。</li>
<li>-Wcast-align：一旦某个指针类型强制转换导致目标所需的地址对齐增加时，编译器就发出警告。</li>
<li>-Wundef：当一个没有定义的符号出现在#if中时，给出警告。</li>
<li>-Wredundant-decls：如果在同一个可见域内某定义多次声明，编译器就发出警告，即使这些重复声明有效并且毫无差别。</li>
</ul>


<hr />

<h1>Optimization</h1>

<ul>
<li>-O0：禁止编译器进行优化，默认为此项。</li>
<li>-O</li>
<li>-O1：尝试优化编译时间和可执行文件大小。</li>
<li>-O2：更多的优化，会尝试几乎全部的优化功能，但不会进行“空间换时间”的优化方法。</li>
<li>-O3：在-O2的基础上再打开一些优化选项：-finline-functions， -funswitch-loops和-fgcse-after-reload。</li>
<li>-Os：对生成文件大小进行优化，它会打开-O2开的全部选项，除了那些增加文件大小的。</li>
<li>-finline-functions：把所有简单的函数内联进调用者，编译器会探索式地决定哪些函数足够简单，值得做这种内联。</li>
<li>-fstrict-aliasing：施加最强的别名规则（aliasing rules）。</li>
</ul>


<hr />

<h1>Standard</h1>

<ul>
<li>-ansi：支持符合ANSI标准的C程序，这样就会关闭GNU C中某些不兼容ANSI C的特性。</li>
<li>-std=c89</li>
<li>-iso9899:1990：指明使用标准ISO C90作为标准来编译程序。</li>
<li>-std=c99</li>
<li>-std=iso9899:1999：指明使用标准ISO C99作为标准来编译程序。</li>
<li>-std=c++98：指明使用标准C++98作为标准来编译程序。</li>
<li>-std=gnu9x</li>
<li>-std=gnu99：使用ISO C99，再加上GNU的一些扩展。</li>
<li>-fno-asm：不把asm, inline或typeof当作关键字，因此这些词可以用做标识符，用<strong>asm</strong>， <strong>inline</strong>和<strong>typeof</strong>能够替代它们，-ansi隐含声明了-fno-asm。</li>
<li>-fgnu89-inline：告诉编译器在C99模式下看到inline函数时使用传统的GNU句法。</li>
</ul>


<hr />

<h1>C options</h1>

<ul>
<li>-fsigned-char</li>
<li>-funsigned-char：把char定义为有/无符号类型，如同signed char/unsigned char。</li>
<li>-traditional：尝试支持传统C编译器的某些方面。</li>
<li>-fno-builtin</li>
<li>-fno-builtin-function：不接受没有<em>_builtin</em>前缀的函数作为内建函数。</li>
<li>-trigraphs：支持ANSI C的三联符（ trigraphs），-ansi选项隐含声明了此选项。</li>
<li>-fsigned-bitfields</li>
<li>-funsigned-bitfields：如果没有明确声明<code>signed'或</code>unsigned&#8217;修饰符，这些选项用来定义有符号位域或无符号位域，缺省情况下位域是有符号的，因为它们继承的基本整数类型（如int）是有符号的。</li>
<li>-Wstrict-prototypes：如果函数的声明或定义没有指出参数类型，编译器就发出警告。</li>
<li>-Wmissing-prototypes：如果没有预先声明就定义了全局函数，编译器就发出警告，即使函数定义自身提供了函数原形也会产生这个警告，这个选项的目的是检查没有在头文件中声明的全局函数。</li>
<li>-Wnested-externs：如果某extern声明出现在函数内部，编译器就发出警告。</li>
</ul>


<hr />

<h1>C++ options</h1>

<ul>
<li>-ffor-scope：从头开始执行程序，也允许进行重定向。</li>
<li>-fno-rtti：关闭对dynamic_cast和typeid的支持，如果不需要这些功能，关闭它会节省一些空间。</li>
<li>-Wctor-dtor-privacy：当一个类没有用时给出警告，因为构造函数和析构函数会被当作私有的。</li>
<li>-Wnon-virtual-dtor：当一个类有多态性，而又没有虚析构函数时，发出警告，-Wall会开启这个选项。</li>
<li>-Wreorder：如果代码中的成员变量的初始化顺序和它们实际执行时初始化顺序不一致，给出警告。</li>
<li>-Wno-deprecated：使用过时的特性时不要给出警告。</li>
<li>-Woverloaded-virtual：如果函数的声明隐藏住了基类的虚函数，就给出警告。</li>
</ul>


<hr />

<h1>Machine Dependent Options (Intel)</h1>

<ul>
<li>-mtune=cpu-type：为指定类型的CPU生成代码，cpu-type可以是：i386，i486，i586，pentium，i686，pentium4等等。</li>
<li>-msse</li>
<li>-msse2</li>
<li>-mmmx</li>
<li>-mno-sse</li>
<li>-mno-sse2</li>
<li>-mno-mmx：使用或者不使用MMX，SSE，SSE2指令。</li>
<li>-m32</li>
<li>-m64：生成32位/64位机器上的代码。</li>
<li>-mpush-args</li>
<li>-mno-push-args：（不）使用 push 指令来进行存储参数，默认是使用。</li>
<li>-mregparm=num：当传递整数参数时，控制所使用寄存器的个数。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS安装SVN]]></title>
    <link href="http://txgcwm.github.io/blog/2014/06/20/centosan-zhuang-svn/"/>
    <updated>2014-06-20T22:07:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/06/20/centosan-zhuang-svn</id>
    <content type="html"><![CDATA[<h1>安装ssh服务器和subversion服务器</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># yum update      
</span><span class='line'># yum install openssh-server     
</span><span class='line'># yum install subversion      </span></code></pre></td></tr></table></div></figure>


<h1>创建登陆svn的用户</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># useradd test // 添加test用户     
</span><span class='line'># groupadd svn // 添加svn用户组     
</span><span class='line'># usermod -a -G svn test // 将test用户添加到svn用户组   </span></code></pre></td></tr></table></div></figure>


<p>另外，如果test用户不存在，则可以用以下语句完成：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># useradd -g svn test     </span></code></pre></td></tr></table></div></figure>


<h1>建立用户存储</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># mkdir -p /home/test/svn/trunk        
</span><span class='line'># svnadmin create /home/test/svn/trunk      </span></code></pre></td></tr></table></div></figure>


<h1>为svn用户组赋予权限</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># chown -R root:svn /home/test/svn/trunk      
</span><span class='line'># chmod -R g+rws /home/test/svn/trunk    /*给svn组赋予读写权限，可以根据需要更改相应权限*/     
</span><span class='line'># chmod -R o-rwx /home/test/svn/trunk    /*删除其他无关人员的读、写、执行权限，默认情况下可能其他人有读权限*/       </span></code></pre></td></tr></table></div></figure>




<!--more-->


<h1>为成员生成密钥</h1>

<p>生成密钥对：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># ssh-keygen -b 1024 -t rsa -N passwd -f testkey    </span></code></pre></td></tr></table></div></figure>


<p>其中，passwd为密钥关键字（相当于密码），由用户自定义；testkey为密钥文件名，生成之后会产生两个文件（testkey和testkey.pub，前者为密钥，后者为公钥）；rsa指定使用rsa进行加密，如果改成dsa，则使用dsa加密。</p>

<p>创建/home/test/.ssh目录，拷贝公钥并重命名成authorized_keys：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># cp testkey.pub /home/test/.ssh/authorized_keys     </span></code></pre></td></tr></table></div></figure>


<p>注意：文件名称必须为authorized_keys。</p>

<h1>更改资源访问权限</h1>

<p>修改/home/test/svn/trunk/conf/svnserve.conf文件，在general中加入以下几行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[general]    
</span><span class='line'>
</span><span class='line'>anon-access = none // 未认证的用户没有任何访问权限     
</span><span class='line'>auth-access = write // 认证的用户有写权限          
</span><span class='line'>authz-db = authz // 认证文件为conf目录下的authz文件      </span></code></pre></td></tr></table></div></figure>


<p>修改/home/test/svn/trunk/conf/authz文件（如果没有则创建），在其中加入：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[/]       // 访问权限为本资源的根目录以及以下目录      
</span><span class='line'>test = rw // test用户的访问权限为“读+写”      </span></code></pre></td></tr></table></div></figure>


<p>还可以采用以下方法进行认证：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[groups]      
</span><span class='line'>svn = test,sam // 定义用户组svn包含两个用户：test和sam     
</span><span class='line'>      
</span><span class='line'>[/]     
</span><span class='line'>@svn = rw // svn用户组的成员访问权限为“读+写”      </span></code></pre></td></tr></table></div></figure>


<h1>启动svnserve</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># svnserve -d -r /home/test/svn/</span></code></pre></td></tr></table></div></figure>




<br></br>


<p><big>参考文章</big></p>

<p><a href="http://blog.csdn.net/wangjingfei/article/details/5424338">CentOS中安装subversion，并使用svn+ssh访问</a><br/>
<a href="http://blog.163.com/longsu2010@yeah/blog/static/173612348201202114212933/">linux（centos）搭建SVN服务器</a><br/>
<a href="http://zhumeng8337797.blog.163.com/blog/static/100768914201292641420400/">CentOS Linux搭建SVN Server配置详解</a><br/>
<a href="http://www.cnblogs.com/ayanmw/archive/2011/12/19/2294054.html">CentOS Linux下配置svn HTTP server</a><br/>
<a href="http://stackoverflow.com/search?q=svn%3A+E170001+%3A+Authorization+failed">svn: E170001 : Authorization failed</a><br/>
<a href="http://blog.sina.com.cn/s/blog_4b93170a0100leb2.html">解决svn Authorization failed错误</a><br/>
<a href="http://blog.csdn.net/laverock/article/details/2195290">ubuntu下架设svn服务器及在windows建立svn+ssh客户端</a><br/>
<a href="http://bbs.csdn.net/topics/310115750">svn登陆时它出现：Authorization failed</a><br/>
<a href="http://www.cyberciti.biz/faq/howto-linux-add-user-to-group/">Howto: Linux Add User To Group</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Scrapy入门简略教程（二）]]></title>
    <link href="http://txgcwm.github.io/blog/2014/06/15/scrapyru-men-jian-lue-jiao-cheng-er/"/>
    <updated>2014-06-15T13:44:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/06/15/scrapyru-men-jian-lue-jiao-cheng-er</id>
    <content type="html"><![CDATA[<h1>What just happened under the hood?</h1>

<p>Scrapy为爬虫中的<code>start_urls</code>属性中每个URL创建了一个<code>scrapy.http.Request</code>对象 ，并把<code>parse</code>方法作为回调函数指定给爬虫。</p>

<p>这些<code>Request</code>会被调度，执行，<code>scrapy.http.Response</code>对象被返回，结果也被反馈给爬虫，之后通过<code>parse()</code>方法解析。</p>

<h1>Extracting Items</h1>

<h2>Introduction to Selectors</h2>

<p>有很多方法从网站中提取数据。Scrapy使用一种叫做Scrapy Selectors的机制，它基于XPath或者是CSS表达式。如果想了解更多selectors和其它机制，可查阅<a href="http://doc.scrapy.org/en/latest/topics/selectors.html#topics-selectors">Selectors documentation</a>。</p>

<p>以下是XPath表达式的例子和它们的含义：</p>

<ul>
<li><code>/html/head/title</code>: 选择HTML文档<code>&lt;head&gt;</code>元素下面的<code>&lt;title&gt;</code>标签。</li>
<li><code>/html/head/title/text()</code>: 选择前面提到的<code>&lt;title&gt;</code>元素下面的文本内容。</li>
<li><code>//td</code>: 选择所有 <code>&lt;td&gt;</code>元素。</li>
<li><code>//div[@class="mine"]</code>: 选择所有包含<code>class="mine"</code>属性的<code>div</code>标签元素。</li>
</ul>


<p>这只是几个使用XPath的简单例子，但是实际上XPath非常强大。如果你想了解更多XPATH的内容，我们向你推荐这个<a href="http://www.w3schools.com/XPath/default.asp">XPath教程</a>。</p>

<p>为了方便使用XPaths，Scrapy提供XPath<code>Selector</code>类， 有两种方式可以选择，<code>HtmlResponse</code>(HTML数据解析) 和<code>XmlResponse</code>(XML数据解析)。</p>

<p>使用XPath选择器，Scrapy提供了一个<code>Selector</code>类，它实例化一个<code>Htmlresponse</code>或<code>Xmlresponse</code>对象作为第一个参数。</p>

<p>你可以看到selectors作为对象表示在文档结构节点。所以，第一个实例化selectors是与根节点相关联，或整个文档。</p>

<p>Selectors有四种基本方法（具体的使用请查看API文档）：</p>

<ul>
<li><code>path()</code>：返回selectors列表, 每一个select表示一个xpath参数表达式选择的节点。</li>
<li><code>css()</code>: 返回selectors列表, 每一个select表示一个CSS参数表达式选择的节点。</li>
<li><code>extract()</code>：返回一个unicode字符串，该字符串为XPath选择器返回的数据。</li>
<li><code>re()</code>： 返回unicode字符串列表，字符串作为参数由正则表达式提取出来。</li>
</ul>


<!--more-->


<h2>Trying Selectors in the Shell</h2>

<p>为了演示Selectors的用法，我们将用到内建的Scrapy shell，这需要系统已经安装IPython (一个扩展的python交互环境)。</p>

<p>要开始shell，必须进入项目顶层目录，然后输入：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>scrapy shell "http://www.dmoz.org/Computers/Programming/Languages/Python/Books/"</span></code></pre></td></tr></table></div></figure>


<p>shell会输入以下的类似信息：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ ... Scrapy log here ... ]
</span><span class='line'>
</span><span class='line'>2014-01-23 17:11:42-0400 [default] DEBUG: Crawled (200) &lt;GET http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&gt; (referer: None)
</span><span class='line'>[s] Available Scrapy objects:
</span><span class='line'>[s]   crawler    &lt;scrapy.crawler.Crawler object at 0x3636b50&gt;
</span><span class='line'>[s]   item       {}
</span><span class='line'>[s]   request    &lt;GET http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&gt;
</span><span class='line'>[s]   response   &lt;200 http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&gt;
</span><span class='line'>[s]   sel        &lt;Selector xpath=None data=u'&lt;html&gt;\r\n&lt;head&gt;\r\n&lt;meta http-equiv="Conten'&gt;
</span><span class='line'>[s]   settings   &lt;CrawlerSettings module=None&gt;
</span><span class='line'>[s]   spider     &lt;Spider 'default' at 0x3cebf50&gt;
</span><span class='line'>[s] Useful shortcuts:
</span><span class='line'>[s]   shelp()           Shell help (print this help)
</span><span class='line'>[s]   fetch(req_or_url) Fetch request (or URL) and update local objects
</span><span class='line'>[s]   view(response)    View response in a browser
</span><span class='line'>
</span><span class='line'>In [1]:</span></code></pre></td></tr></table></div></figure>


<p>Shell加载完毕后，将获得回应，这些内容被存储在本地变量<code>response</code>中，所以如果你输入<code>response.body</code>将会看到response的body部分，或者输入<code>response.headers</code>来查看它的header部分。</p>

<p>Shell通过变量<code>sel</code>为这个response提前初始化一个selector，这个selector基于response的类型自动选择最佳的解析规则（XML或者HTML）。</p>

<p>我们来看看里面有什么：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>In [1]: sel.xpath('//title')
</span><span class='line'>Out[1]: [&lt;Selector xpath='//title' data=u'&lt;title&gt;Open Directory - Computers: Progr'&gt;]
</span><span class='line'>
</span><span class='line'>In [2]: sel.xpath('//title').extract()
</span><span class='line'>Out[2]: [u'&lt;title&gt;Open Directory - Computers: Programming: Languages: Python: Books&lt;/title&gt;']
</span><span class='line'>
</span><span class='line'>In [3]: sel.xpath('//title/text()')
</span><span class='line'>Out[3]: [&lt;Selector xpath='//title/text()' data=u'Open Directory - Computers: Programming:'&gt;]
</span><span class='line'>
</span><span class='line'>In [4]: sel.xpath('//title/text()').extract()
</span><span class='line'>Out[4]: [u'Open Directory - Computers: Programming: Languages: Python: Books']
</span><span class='line'>
</span><span class='line'>In [5]: sel.xpath('//title/text()').re('(\w+):')
</span><span class='line'>Out[5]: [u'Computers', u'Programming', u'Languages', u'Python']</span></code></pre></td></tr></table></div></figure>


<h2>Extracting the data</h2>

<p>现在我们尝试从网页中提取一些真正的数据。</p>

<p>你可以在控制台输入<code>response.body</code>，检查源代码中的<code>XPaths</code>是否与预期相同。然而，检查HTML源代码是件很枯燥的事情。为了使事情变得简单，我们使用类似Firebug的Firefox扩展插件。更多信息请查看<a href="http://doc.scrapy.org/en/latest/topics/firebug.html#topics-firebug">Using Firebug for scraping</a>和<a href="http://doc.scrapy.org/en/latest/topics/firefox.html#topics-firefox">Using Firefox for scraping</a>。</p>

<p>检查源代码后，你会发现我们需要的数据在<code>&lt;ul&gt;</code>元素中，事实上是第二个<code>&lt;ul&gt;</code>。</p>

<p>我们可以通过如下命令选出每个站点中的<code>&lt;li&gt;</code>元素:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sel.xpath('//ul/li')</span></code></pre></td></tr></table></div></figure>


<p>站点的描述信息：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sel.xpath('//ul/li/text()').extract()</span></code></pre></td></tr></table></div></figure>


<p>站点的标题：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sel.xpath('//ul/li/a/text()').extract()</span></code></pre></td></tr></table></div></figure>


<p>站点的链接：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sel.xpath('//ul/li/a/@href').extract()</span></code></pre></td></tr></table></div></figure>


<p>正如我们前面说的那样，每一个<code>.xpath</code>会返回一个selectors的列表，所以我们可以结合<code>.xpath()</code>去挖掘更深的节点。我们将会用到这些特性，所以:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sites = sel.xpath('//ul/li')
</span><span class='line'>for site in sites:
</span><span class='line'>    title = site.xpath('a/text()').extract()
</span><span class='line'>    link = site.xpath('a/@href').extract()
</span><span class='line'>    desc = site.xpath('text()').extract()
</span><span class='line'>    print title, link, desc</span></code></pre></td></tr></table></div></figure>


<p>我们把这些代码添加到爬虫中：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>from scrapy.spider import Spider
</span><span class='line'>from scrapy.selector import Selector
</span><span class='line'>
</span><span class='line'>class DmozSpider(Spider):
</span><span class='line'>    name = "dmoz"
</span><span class='line'>    allowed_domains = ["dmoz.org"]
</span><span class='line'>    start_urls = [
</span><span class='line'>        "http://www.dmoz.org/Computers/Programming/Languages/Python/Books/",
</span><span class='line'>        "http://www.dmoz.org/Computers/Programming/Languages/Python/Resources/"
</span><span class='line'>    ]
</span><span class='line'>
</span><span class='line'>    def parse(self, response):
</span><span class='line'>        sel = Selector(response)
</span><span class='line'>        sites = sel.xpath('//ul/li')
</span><span class='line'>        for site in sites:
</span><span class='line'>            title = site.xpath('a/text()').extract()
</span><span class='line'>            link = site.xpath('a/@href').extract()
</span><span class='line'>            desc = site.xpath('text()').extract()
</span><span class='line'>            print title, link, desc</span></code></pre></td></tr></table></div></figure>


<p>我们通过scrapy.selector将Selector类导入及初始化一个Selector实例。现在可以指定我们的XPaths，如在shell中做的那样。我们尝试重新抓取dmoz.org站点，你将会在你的输出平台看到站点的一些信息，输入如下的命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>scrapy crawl dmoz</span></code></pre></td></tr></table></div></figure>


<h2>Using our item</h2>

<p>Item对象是用户自定义的python字典，你可以获取它们每个字段的值(即之前定义的类的属性)，它使用了标准的字典语法，如下所示:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&gt;&gt;&gt; item = DmozItem()
</span><span class='line'>&gt;&gt;&gt; item['title'] = 'Example title'
</span><span class='line'>&gt;&gt;&gt; item['title']
</span><span class='line'>'Example title'</span></code></pre></td></tr></table></div></figure>


<p>Spiders希望将其抓取的数据存放到<code>Item</code>对象中。为了返回我们抓取的数据，Spider的最终代码应当是这样:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>from scrapy.spider import Spider
</span><span class='line'>from scrapy.selector import Selector
</span><span class='line'>
</span><span class='line'>from tutorial.items import DmozItem
</span><span class='line'>
</span><span class='line'>class DmozSpider(Spider):
</span><span class='line'>    name = "dmoz"
</span><span class='line'>    allowed_domains = ["dmoz.org"]
</span><span class='line'>    start_urls = [
</span><span class='line'>        "http://www.dmoz.org/Computers/Programming/Languages/Python/Books/",
</span><span class='line'>        "http://www.dmoz.org/Computers/Programming/Languages/Python/Resources/"
</span><span class='line'>    ]
</span><span class='line'>
</span><span class='line'>    def parse(self, response):
</span><span class='line'>        sel = Selector(response)
</span><span class='line'>        sites = sel.xpath('//ul/li')
</span><span class='line'>        items = []
</span><span class='line'>        for site in sites:
</span><span class='line'>            item = DmozItem()
</span><span class='line'>            item['title'] = site.xpath('a/text()').extract()
</span><span class='line'>            item['link'] = site.xpath('a/@href').extract()
</span><span class='line'>            item['desc'] = site.xpath('text()').extract()
</span><span class='line'>            items.append(item)
</span><span class='line'>        return items</span></code></pre></td></tr></table></div></figure>


<p>再次抓取dmoz.org站点的信息：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[dmoz] DEBUG: Scraped from &lt;200 http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&gt;
</span><span class='line'>     {'desc': [u' - By David Mertz; Addison Wesley. Book in progress, full text, ASCII format. Asks for feedback. [author website, Gnosis Software, Inc.\n],
</span><span class='line'>      'link': [u'http://gnosis.cx/TPiP/'],
</span><span class='line'>      'title': [u'Text Processing in Python']}
</span><span class='line'>[dmoz] DEBUG: Scraped from &lt;200 http://www.dmoz.org/Computers/Programming/Languages/Python/Books/&gt;
</span><span class='line'>     {'desc': [u' - By Sean McGrath; Prentice Hall PTR, 2000, ISBN 0130211192, has CD-ROM. Methods to build XML applications fast, Python tutorial, DOM and SAX, new Pyxie open source XML processing library. [Prentice Hall PTR]\n'],
</span><span class='line'>      'link': [u'http://www.informit.com/store/product.aspx?isbn=0130211192'],
</span><span class='line'>      'title': [u'XML Processing with Python']}</span></code></pre></td></tr></table></div></figure>


<h1>Storing the scraped data</h1>

<p>保存抓取的信息的最简单方法就是使用<a href="http://doc.scrapy.org/en/latest/topics/feed-exports.html#topics-feed-exports">Feed exports</a>，使用如下的命令：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>scrapy crawl dmoz -o items.json -t json</span></code></pre></td></tr></table></div></figure>


<p>所有抓取的items将以JSON格式被保存在新生成的<code>items.json</code>文件中。</p>

<p>在小型的项目中（如这个教程中的例子），这些已经足够。然而，如果你想用抓取的items做更复杂的事情，你可以写一个<a href="http://doc.scrapy.org/en/latest/topics/item-pipeline.html#topics-item-pipeline">Item Pipeline</a>(条目管道)。在项目创建的时候，一个专门用于条目管道的占位符文件随着items一起被建立，在<code>tutorial/pipelines.py</code>中。如果你只需要存取这些抓取后的items的话，就不需要去实现任何的条目管道。</p>

<p><big>注：</big>整个Scrapy的入门教程写得比较杂乱，包含了翻译部分和自己写的测试小例。</p>

<p><td></td>
<big>参考文章</big></p>

<p><a href="http://doc.scrapy.org/en/latest/intro/overview.html">Scrapy at a glance</a>     <br/>
<a href="http://www.cnblogs.com/txw1958/archive/2012/07/16/scrapy-tutorial.html">Scrapy入门教程</a><br/>
<a href="http://www.biaodianfu.com/mplementation-of-targeted-crawling-system.html">聚焦爬虫：定向抓取系统的实现方法</a><br/>
<a href="http://lujiesky.blog.51cto.com/332319/1328176">开源python网络爬虫框架Scrapy</a><br/>
<a href="http://www.yakergong.net/blog/archives/500">使用scrapy进行大规模抓取(一)</a><br/>
<a href="http://blog.csdn.net/pleasecallmewhy/article/details/19642329">Python网络爬虫（12）：爬虫框架Scrapy的第一个爬虫示例入门教程</a><br/>
<a href="http://www.searchtb.com/2011/07/%E5%BF%AB%E9%80%9F%E6%9E%84%E5%BB%BA%E5%AE%9E%E6%97%B6%E6%8A%93%E5%8F%96%E9%9B%86%E7%BE%A4.html?spm=0.0.0.0.oD8o9v">快速构建实时抓取集群</a> <br/>
<a href="http://www.pythontab.com/html/2013/pythonhexinbiancheng_0814/541.html">python爬虫框架scrapy实例详解</a> <br/>
<a href="http://blog.pluskid.org/?p=366">Scrapy 轻松定制网络爬虫</a> <br/>
<a href="https://github.com/scrapinghub">Scrapinghub</a><br/>
<a href="http://www.kankanews.com/ICkengine/archives/94817.shtml">使用python，scrapy写（定制）爬虫的经验，资料，杂</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[大哥，别跑呀]]></title>
    <link href="http://txgcwm.github.io/blog/2014/06/08/da-ge-%2Cbie-pao-ya/"/>
    <updated>2014-06-08T18:46:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/06/08/da-ge-,bie-pao-ya</id>
    <content type="html"><![CDATA[<p>经常性刷空间和朋友圈，200M的流量总不够用，下午抽空去更换套餐。可移动厅内的人员实在太多，要等到自己还需好一会儿，遂走到外面的走栏处玩游戏。一个比我稍微年长的人在马路边晃悠，我也没太在意，或许他和我一样想在外面静静地等待。</p>

<p>等到周遭人比较少的时候，那位大哥走到了自行车旁，摆弄着它，正当他的手深入口袋准备掏工具的时候，我开口说话了：“大哥，你确信这辆自行车是你的吗？我的车子也刚好停在这个位置诶！”</p>

<p>没等我话说完，那位大哥撒腿就跑。</p>

<p>“大哥，你别跑呀，我并没有恶意，我只想告诉你这辆自行车确实是我的，你真的是搞错了。”</p>

<br></br>


<p>注：窃车一事纯属瞎编，仅供娱乐！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[有一种爱叫做放手]]></title>
    <link href="http://txgcwm.github.io/blog/2014/06/08/you-%5B%3F%5D-chong-ai-jiao-zuo-fang-shou/"/>
    <updated>2014-06-08T11:09:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/06/08/you-[?]-chong-ai-jiao-zuo-fang-shou</id>
    <content type="html"><![CDATA[<p><img src="http://img.1ting.com/Node/Amu/i/1.jpg" alt="alt text" /></p>

<p>那些女同事经常问我是什么星座的，当我告诉她们我是射手座的时候，马上就被扣上了“花心”的大帽子，然后给我列举他们身边的碰到的那些射手男。就我个人而言，我不太喜欢这个贬义词，它是对感情的不负责，对爱情的亵渎，而我自始至终不觉得自己是那样的人。</p>

<p>谈得来，就专注如一，否则立马停止一段没有结果的感情（只有单方的独恋，那只是一种情，而不是爱情，爱情需要双方的付出）而不再打扰她的生活，这就是我的爱情观。每个人都希望自己能够找到情投意合的另外一半，我也不例外。堂姐不久前把我11年写的一条说说“有一种单身只为等待某个人的出现”发给我，再次看到这话的一瞬间，我会心地笑了，为自己没有因为年龄的增长和家人的催促而改变自己的初心。</p>

<p>同事要给我介绍女朋友，问我是否有一些特定的要求，我告诉她们“其实我没有什么特别的要求，只想找一个能够和自己谈得来的”，她们立马惊讶地回道“这不是没有要求啦，是很高的要求了”，然后关于“介绍女朋友”的事情就不了了之了。所以，我至今单着，一直等待那个正在等待我的人出现，然后轰轰烈烈、义无返顾地去爱一次。</p>

<!--more-->


<p>谈及自己对爱情的看法，只不过是一个引子，主要还是想谈谈个人对另外一段单思恋的想法。我不是PUA，更不是爱情专家，恰恰相反，很多时候还需要别人为我指点迷津。只是看到“有人爱得痛苦，而被爱的人把它视为了一种负担”（这只是我看到的表面现象，也可能他们都彼此享受了这种感觉），遂想写下此文。</p>

<p>男人喜欢那个女孩很多年了，有没有直接表达过那种爱意我并不清楚，但那个女孩肯定知道他对她的爱慕的。生活就是这么残酷，离开家乡工作之后，熟悉的人都散落到了世界各地，他们也不例外。女孩的每条信息，他都关注着（本想用“几乎”一词，最后觉得不合适，还是去掉了），而且都是积极的回复。一些不痛不痒的信息（旁观者的看法），也能牵动他那敏感的神经细胞，有时我甚至在想他是因她的存在而刷空间的。和他的积极相比，她却是冷淡，很少对他的评论进行回复，即便有，也是平淡的那种，我想更多的是出于礼貌性的答复。站在女孩的角度考虑，又能如何回答呢？对他的回复每条都回的话，那是否就是在释放一种信号。如果没有感觉，最好的处理方式就是冷漠对待（他天天在空间为她刷屏，她也需要考虑到自己的朋友或则男友对这事的看法），不给对方一丝的机会，这不是一种残忍，却是对对方的一种保护，让他不会产生错觉。</p>

<p>对自己爱而不爱自己的人过度关注，这是对她人生活的一种叨扰，当你出现的时候会让她觉得无所适从，更多的是想逃避。这种单方的爱，已成为了对方的一种负担，这种行为是否还能够称得上是爱呢？如果真的爱对方，何不放手呢！我们可以默默地关注对方，静静地等待机会（对于一些人来说是，可对于当事者则是一种伤痛了）的出现。要做到对每条信息不做任何评论，那是很难的，也是一个不明智的选择，那样就不能让对方感受到你对她的关注。合适的做法我觉得应该是在恰当的信息出现的时候给出自己的关怀，不仅能让对方感受到自己的情谊，也能让对方在接收你的建议时不至于不自在。</p>

<p>女人有一个备胎理论，我不喜欢，爱情本来就是一件极其简单的事情，爱就是爱，不爱就是不爱，何必多出一些不必要的事端呢。这或许只是我作为一个理性男的思考吧！</p>

<p>阿木的一首歌也叫《有一种爱叫做放手》，里面讲述的故事和我今天谈及的故事有些不同，虽有差异，却极其喜欢“我的离去若让你拥有所有，让真爱带我走”这句词。彼此不能走到一起，那就默默的关注对方，然后祝福她的生活能够幸福美满，这或许就是大爱，爱一个人的最高境界吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[鬼在敲击键盘]]></title>
    <link href="http://txgcwm.github.io/blog/2014/06/07/gui-zai-qiao-ji-jian-pan/"/>
    <updated>2014-06-07T23:11:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/06/07/gui-zai-qiao-ji-jian-pan</id>
    <content type="html"><![CDATA[<p>中午时刻来到公司，一片寂静，没有见到一个人影，虽是白天，整个屋内也显得黯淡。就我的视线看过去，我们部门所在的区域没有一个人。开灯，打开电脑，开始码代码。</p>

<p>不久之后，隐隐听到有敲击键盘的声音，虽是戴着耳机，却能够听得清晰。起先没有在意，可接二连三的听到，不得不引起我的注意。总觉得有同事在加班，可能是他沓拉在椅子上，而我没有看到，从座位上起身，去看了看每个“坑”，事实告诉我这里除了我确实没有其他人。没有产生更多的恐惧感，觉得可能是测试视频里有敲击键盘的声音，可仔细看过之后也没有发现类似的声音。</p>

<p>回到座位，心里有些恐慌，因为发出这种声音除了人外，就只有一种可能，那就是人们常说的“鬼”，这也是那时的我唯一找到的解释了。赶紧离开，那是我当时本能的考虑。声音发出的那个位置，据说坐过那里的人都先后离职了，我就想坐在那里的人是否有不正常死亡的，他用敲击键盘的声音告诫我作为一个码农要珍惜自己的生命。都说鬼在中国只会在夜间出行，可现在偏偏遇上了白天的，不得不让我恐惧。</p>

<!--more-->


<p>害怕归害怕，可内心还是有些不解，希望能够探究个明白，继续坐到了位置上码码。又一阵声响，我走到了窗边，此时才明白，原来是风吹动了窗帘，窗帘继而击打窗户，产生了“敲击键盘”的声音。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[我们在为自己引流]]></title>
    <link href="http://txgcwm.github.io/blog/2014/06/06/wo-men-zai-wei-zi-ji-yin-liu/"/>
    <updated>2014-06-06T23:53:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/06/06/wo-men-zai-wei-zi-ji-yin-liu</id>
    <content type="html"><![CDATA[<p><img src="http://www.fzxy.edu.cn/picture/41/1004151621299175.jpg" alt="alt text" /></p>

<p>“今日头条”完成了C轮一亿美金的融资（估值据称已超过5亿美元），引发了一时引来传统媒体和门户网站争先关注，我想更多的是恐惧和危机感。“今日头条”主要做的就是聚合其它传统媒体和门户网站的内容聚合，这必然牵扯到版权的归属问题。虽然有原文链接，但这对内容源来说伤害还是很大的，它们没有因此而得到更多的流量，哪个人在阅读了新闻之后还有心思再跳到其它的页面再次查看一遍。</p>

<p>且不论“今日头条”的是非，谈谈自己的阅读体验和引流的观察。一个网站在互联网的海洋中生存都如此的艰辛，我们这群默默无闻的生产者就更不易了。其实我们的目的很单纯，并没有想从自己的内容或者作品处获得任何的回报，只是希望更多的用户能够阅读到我们的文字，进而能够和志同道合的人沟通。当生产出好的内容的时候，又有被抄袭的可能，让我们最痛恨的行为是转载之后不标明出处。一个人若能把网上好的内容聚集到一起，即便这些都不是他们自己出产的，也可能获得很高的人气，往往那些真正的生产者却没有任何的人气。</p>

<!--more-->


<p>始终觉得自己的文字不能带来太多的能量，但一旦被推荐的时候还是异常的兴奋，因为这是对生产者的尊重和认同，一个人不停地写作的部分动力可能就源于此。如果有人向你提出转载文章的征询意见的时候，更让人激动，没有什么比得上被人尊重了。有朋友常常因自己的文章被窃取而愤愤不已，可我们生气又能怎么办呢。互联网还没有规范的约束，我们只能寄希望那些转载的朋友能够设身处地地为他人考虑一下。我还是坚信人的品性会随着社会的进步而不断提高。</p>

<p>我并不觉得大家喜欢转战各个平台，毕竟这需要耗费大量的精力去维护。可事实上，我们却又是在各个平台上活跃着，一方面可能是一些平台的衰退，另一方面是和自己类似的人群散落在不同的平台上。人有一个习惯，在自己认同的地方总是愿意守候着，直至自己再也忍受不了。看看那些经常在平台写文章的人们，总是喜欢加上自己独立博客的链接，还有社交帐号，就我个人而言，我更喜欢读者能够到我的博客上去看（或许这是为了满足自己博客流量增长的虚荣心），够幸运的话，还能遇上一些谈得来的小伙伴。</p>

<p>如果个人的网站有足够多的阅读者，那又有什么必要不断地做重复工作，我们并不想因此而产生任何的经济利益。在不同的平台散播我们的文字，可能我们希望像散播花香一样，把读者引导到源头。若是在某个平台看到我认同的文章，我一般会跳到他的主页去，阅读更多的文字，更清晰地认知一个人，往往因此我收获了更多的东西，因为一个生产者他的主要精力还是在精心经营自己那个独属的家园。</p>

<p>没有任何的商业目的，我们只是在单纯地引流，希望招来一些“蝶”。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[问顶九华山]]></title>
    <link href="http://txgcwm.github.io/blog/2014/06/04/wen-ding-jiu-hua-shan/"/>
    <updated>2014-06-04T23:50:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/06/04/wen-ding-jiu-hua-shan</id>
    <content type="html"><![CDATA[<p><img src="http://ww3.sinaimg.cn/large/9b861b47jw1dwvw6ogp3dj.jpg" alt="alt text" /></p>

<p>早在去年跟随游侠客游玩婺源的时候，就听领队木头谈起过九华山，映像最深的就是那种逃票的经历，所以它在我的脑海中念念不忘。与其一直在不停地想象，还不如亲身去体验一下，再次背起背包，和波哥一同踏上旅行的征程。</p>

<p>我觉得出行最大的乐趣并不是去欣赏目的地的风景，更多的是和一同上路的朋友谈谈心，看看沿途的风景和乡土人情。</p>

<p>车上有一对较年长的夫妻，女的已退休（她的网名叫薰衣草，在车上还特意为自己的网名解释了一番），男的也将在今年的六月份退休，他们都是浙大的教授，主要在园林和花草方面做研究。从他们的介绍中可以知道他们去过很多地方，他们并没有像其他老年人那样待在家里，而是游走在祖国的山山水水间。在整个爬山的过程中，他们都走在了前面，让我们这些年轻人都自叹不如。真的很羡慕他们，能够找个共同志趣的老伴真的是人生中最幸运的事情。</p>

<!--more-->


<p>一个临安的老师，上次去三清山，结果被抓住了，只能补票了，这次他最大的愿望就是希望自己能够逃票成功。事实是，他确实做到了，当一切进行地如此顺畅的时候，他反而觉得不是很满意，因为他没有那种逃跑的感觉。在出山门前，我们包了一辆当地人的黑车，避免了所有可能查票的状况，当然那个老师也和我们坐在同一辆车上。虽然看上去他比较年长，可还是有些愤青，面对那些伸手“乞讨”的人，他嘴里总是叨叨着他的观点，幸运的是他和我们一群人在一起，不至于碰上不必要的麻烦。</p>

<p>我们的领队孤独是很专业的旅行者，来的路上给我们讲解旅行相关的知识和注意点。他爬过冰川，也去了各种不同的地方探险。让我意外的是，竟然车上有两个女生也去冰川探过险。一对男女朋友是在去年旅行的途中认识的，在他们的朋友圈中也看到了他们的婚纱照，看来他们也快结婚了，亲眼见了，才知道游侠客成就了好好的男男女女。</p>

<p>队友中有“幸福的阳光”，可我们并没有那么的幸运，迎接我们的并不是晴朗天气，却是“大雨滂沱”（我们另外一个队友的网名）。在山脚的时候，就下起了小雨，可这又怎能阻止得了我们那颗不甘示弱的心呢！道路是崎岖的，也是艰险的，很多人在洗澡的时候才发掘自己的脚被划破了，无意中又被水蛭吸了血，手臂上起了一些泡泡。有人觉得这是活受罪，可我们却是乐在其中。</p>

<p>老天真会跟我们开玩笑，当我们进入林中的时候，雨越下越大，还伴随着雷声，幸好没有闪电出现，这让我们的心宽慰了许多。已步入深林，没有选择的余地，只能前行。上海站的游侠比我们晚出发一个小时，在还未进入林中前他们就碰到了大雨，我们的领队预估他们会有一半的人原路返回，可结果是全军后撤。当我们真正进入景区的时候，雨才是最大的，虽然穿着雨衣，但我们全身还是湿透了，雨水打在身上有一种刺痛感。我走在了队伍的第一梯队，所以一直往目的地赶，没能欣赏沿途的景色，我们也欣赏不了，一片白茫茫，远近景色都笼罩在雾气之中。在这种大风大雨的环境下，也没人敢把手机或相机拿出来拍照。雨水实在太大，期间我们攻破了山上的一所小木屋，在那里我们几个人停留整顿，顺便把我们的午餐给解决了。</p>

<p>入住到寺庙的客房里，洗完澡，躺在床上休息。老师和我们住在同一个房间，看到我们都穿着裤子躺在床上，他也立马起床穿上，嘴里说道“会不会得性病啊”，我们都安慰他道“佛门圣地是不容男女胡作非为的，放心好了”，可他还是不放心，要穿上那条湿湿的裤子，试图把它给捂干，不得不说老师很可爱。下午的时候，老天对我们不错，天晴了，外面的景色一览无余，个个都急匆匆地往外跑，唯恐自己错过些什么。和其它景区一样，这里也有不少的野猴子，等待路人给他们吃的，一个小伙面对它们实在没有办法，就把一盒盒的药给它们了，不知道它们吃了会有怎样的反应？</p>

<p>寺庙的生活是平淡的，五点多就早早地吃了饭，剩下的时间可能就是去睡觉了，可我们又哪能睡得着呢。原本的夜爬行动没有进行，更多的是处于安全的考虑。几个寂寞的哥们聚集到了一起，开始玩起了杀人游戏。我们在菩萨的面前玩耍，我想他们是能够理解我们这群凡人的孤独的。上海站的朋友也加入了进来，一个上海站出发的游侠知道我们是杭州来的时候兴奋不已，他终于找到了组织，可以随同我们一同回杭州了。</p>

<p>为了逃票，我们需要趁那些工作人员还没有上班的时候就早早的起来，五点多就吃了早饭，然后往山下赶。原本以为自己够早，可那些和尚早早的就开始做早课了。大雾笼罩着整个大山，走在山间的小道上，我们恍如身处仙境一般。</p>

<p>虽然我们身上爬满了疲惫，但我们始终在坚持，尽可能去看看那些景点，没有走全所有的地方，这也只是为自己下次来这里找个合适的理由。每一个小伙伴都很幸运，不仅欣赏到了风景、看到了藏地菩萨的故事，还体验了逃票的惊心动魄。</p>

<p>领队说自己越玩胆子越小，我想这对每个行者都是一样的，因为我们和险境是如此的接近。明知前方的路不好走，却为何始终在摸索、奔波，或许我们只是为了给自己年轻的内心寻找一个值得安放的地方。未来还会走向哪里，我不太清楚，我只明白一点，我不可能停止前行的脚步。思想有多远，我就应该努力走多远。</p>

<p>旅行不一定是看风景，可能有时就是去听听别人的故事，看看他人做的事，然后用这些独特的经历来丰富自己的人生。走在路上的人，永远不会寂寞，因为有一群志同道合的人与你一同前行。走起，年轻而又不甘寂寞的狂野的心！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[她即将离去]]></title>
    <link href="http://txgcwm.github.io/blog/2014/05/29/ta-ji-jiang-chi-qu/"/>
    <updated>2014-05-29T23:16:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/05/29/ta-ji-jiang-chi-qu</id>
    <content type="html"><![CDATA[<p><img src="http://www.netbian.com/d/file/20130720/75bfb3cf7bf3d81a023aace1b9adbd14.jpg" alt="alt text" /></p>

<p>职场上人来人往是一件很平常的事情，对于工作了这么多年的我来说也应该早已看透，可我始终做不到这点，当一个熟悉的人离开的时候我总是有着一种强烈的伤感。我是一个理想主义者，所以总期许着能够和一些人一辈子共事，如果可以，那将是一件很美好的事情。</p>

<p>来到新东家将近快半年了，这也是我认识她的时间，所以对她的了解也不是很深。虽然我们同属一个大项目组，但我们并没有太多的交集，我做的项目并非由她负责测试。这半年的时间也是我逐渐融合入这个大家庭的时间，现在对周遭的人和事都已熟悉，正式和他们打成一片的时候，可她却要离开了，去到一个我曾经离开的地方，明天过后她就成为了我的前同事。</p>

<!--more-->


<p>由于开发的失测或者是项目的需要，周末的时候她经常独自在公司加班测试产品的功能，而且有时甚至是接连好几周。偶尔我也能听到她对产品的抱怨，但我能够理解她的心情，做出bug一大堆的产品谁都会有怨言的，程序员对此要负很大的责任。测试和开发本是一家，可我们没有更好的站在测试的角度去思考问题。在一次偶然的饭桌上，她提到自己的两次生日都是在出差加班中度过的，从她的脸上我没有看到一丝的抱怨。在IT行业，一个女生能够做到这些，实属不易。虽然我在期间沉默不语，可对她的那种敬意油然而生。</p>

<p>当得知她准备离职并且准备去往我曾经呆过的城市的时候，我尝试咨询以往的同事，在他们的公司是否有合适的职位。可惜的是，就当时的时间点并没有合适她的空缺。但有一些其它的职位，我劝说她可以尝试新的工作岗位和发展方向，可她并没有同意我的观点。就我个人的理解，以她的工作态度，可以适合任何的工作岗位，只是需要一些时间去学习，但我相信这个时间的花费并不会很长。不要因为过往的工作经历而尘封了自己，不然无法知道自己本身所拥有的能量，这是我想对她说或者是送给她的话。在深圳的朋友，如果看到了我的这篇文章，觉得有适合她的职位请帮忙推荐，她绝对值得你这么做。</p>

<p>这周结束她就要离开，可和他人不同，不会因即将离去而停下工作，在有需要的时候她依然在公司加班，今晚九点多我回家了，可她还在那里默默地为公司奉献着自己的青春。在那一刻，我最想对她说的一句话就是“你是一个值得我敬重的人”！</p>

<p>我无法改变一个既定的事实，也没有任何理由劝说她留下，只想祝福她在以后的人生道路上走得更加美满一些。虽然大家都只是生命中的过客，但对她的敬意我想我是不会随着时间的流逝而淡忘的，她的敬业精神及工作态度是值得我学习和追随的。</p>

<p>离去对她来说，应该不算是一件坏事，可以到一个新的环境开始新的生活，做一个更完美的自己。但愿人长久，千里共婵娟！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[思念]]></title>
    <link href="http://txgcwm.github.io/blog/2014/05/29/si-nian/"/>
    <updated>2014-05-29T00:22:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/05/29/si-nian</id>
    <content type="html"><![CDATA[<p>输入，删除；<br/>
再输入，又删除；<br/>
清空，放下！</p>
]]></content>
  </entry>
  
</feed>

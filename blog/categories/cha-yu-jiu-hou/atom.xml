<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 茶余酒后 | 残剑]]></title>
  <link href="http://txgcwm.github.io/blog/categories/cha-yu-jiu-hou/atom.xml" rel="self"/>
  <link href="http://txgcwm.github.io/"/>
  <updated>2015-07-20T06:21:39+08:00</updated>
  <id>http://txgcwm.github.io/</id>
  <author>
    <name><![CDATA[残剑]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[台风夜是不眠夜]]></title>
    <link href="http://txgcwm.github.io/blog/2015/07/11/tai-feng-ye-shi-bu-mian-ye/"/>
    <updated>2015-07-11T01:36:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2015/07/11/tai-feng-ye-shi-bu-mian-ye</id>
    <content type="html"><![CDATA[<p>风吹个不停，雨也一直滴答滴答地下，一句“谢谢你”足以搅乱一个人的心，让人不能平静，会持续到何时，这很难说，或许是等到原谅的时刻，或许是释然的那一瞬间。</p>

<p>一直以来都是一个情商颇低的人，不能从她人的言语和行为中判断出波动的情绪，导致错误的不断上演。尝试着改变，却没有多少的进展，只怪自己天生的愚顿。</p>

<p>遇事本该认真，可始终带有一丝的嬉笑，终究会让人误解。自己也清楚不该如此，但天生的乐观却磨灭不了这种天性。</p>

<p>夜很静，人很乏，却不能入眠，黑夜是让人深思的时刻，或许他就是一个笨小孩！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[不要重写但可以重构]]></title>
    <link href="http://txgcwm.github.io/blog/2015/05/17/bu-yao-zhong-xie-dan-ke-yi-zhong-gou/"/>
    <updated>2015-05-17T00:16:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2015/05/17/bu-yao-zhong-xie-dan-ke-yi-zhong-gou</id>
    <content type="html"><![CDATA[<p><img src="http://www.xdism.com/uploadfile/2013/0610/20130610065447327.jpg" alt="大象" /></p>

<p>不久前在朋友圈有一篇关于不要重写代码的文章很火，大体意思是这样：即便原有的代码看上去很不友好，也不要尝试轻易去重写代码，因为它经过了长期的测试及修补，已经运行得很稳定，要重写的话很多逻辑可能被忽略掉，可能也要犯曾经碰到的所有错误，需要更多的人力去测试。</p>

<p>阅读之后，深有体会，即便是代码的书写者也未必对其中的逻辑全部了解，要让他们重写也是一件很难的事情，而且成本会很高，还不如在原来的基础上进行修改。</p>

<!--more-->


<p>虽然重写是一件成本很大的事情，但我们可以不停地重构，逐步优化，最终会让代码变得完美。或者我们可以尝试如下的步骤去完善那些复杂的代码。</p>

<h1>提取可复用的代码</h1>

<p>不同的实现有时需要一些相类似的代码，拷贝然后稍加修改是一件极其容易的事情，但一旦某个地方出错了，其它地方可能被遗忘掉。即便是小部分的逻辑，要是增加一些控制变量，把一些代码集中到一个函数中，那么修改了一个错误就可以修改全部潜在的错误，达到事半功倍的效果。</p>

<h1>肢解独立的功能</h1>

<p>有些逻辑业务可以独立出来管理，阅读起来更加便利，逻辑也会变得有条理，调试起来也方便，出现问题了只需要到相应的模块查看。</p>

<p>重构后的代码可能需要花费更多的时间去了解其架构，但它却提升了代码的健壮性。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[优雅地杀死一个睿智的平民]]></title>
    <link href="http://txgcwm.github.io/blog/2015/05/12/you-ya-di-sha-si-%5B%3F%5D-ge-rui-zhi-de-ping-min/"/>
    <updated>2015-05-12T23:10:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2015/05/12/you-ya-di-sha-si-[?]-ge-rui-zhi-de-ping-min</id>
    <content type="html"><![CDATA[<p><img src="http://www.loveoo.com/kill/8.gif" alt="杀手的进阶" /></p>

<p>在“杀人游戏”中，总是能够碰到一些睿智的平民，在前一两轮中通过观察、分析和判断总能猜测到哪些人是杀手，他们尝试引导其它一些平民玩家杀死杀手，很多时候也常被杀手误以为是警察。</p>

<p>相比那些争议大且又不是杀手身份的玩家，这些玩家是比较难对付的，因为他们分析的大部分是正确的，听他们讲解的那一刻，杀手甚至会觉得自己的身份已经暴露在那些人的眼前了。</p>

<!--more-->


<p>针对这种人的出现，很多杀手往往会在下一个夜里将这个人杀死，觉得只要他们的存在就会威胁到自己，而这种做法又不是最明智的，一旦那些人在夜里“死去”，只能证明他们分析的都是正确的，这也让警察可以更精准地去确认杀手的身份。反之，留着却可以证明他们的分析是错误的。</p>

<p>通过在夜里合理地“杀人”，会让其他的一些玩家把那些睿智的平民误认为是杀手，这样就可以诱导大家票死那人，这样他们的分析也就理所当然地被认为是错误的了，因为票死一个人是群体行为，个体在一般情况下不会认为自己是错误的。</p>

<p>实际情况，就要具体看场上各种角色玩家的人数，然后定相应的策略。不过，个人还是觉得“诱导玩家票死睿智的平民”这种方式要优于“夜间杀死那个睿智的平民”。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何成为一个优秀的杀手]]></title>
    <link href="http://txgcwm.github.io/blog/2015/05/09/ru-he-cheng-wei-%5B%3F%5D-ge-you-xiu-de-sha-shou/"/>
    <updated>2015-05-09T18:49:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2015/05/09/ru-he-cheng-wei-[?]-ge-you-xiu-de-sha-shou</id>
    <content type="html"><![CDATA[<p><img src="http://www.loveoo.com/kill/8.gif" alt="杀手的进阶" /></p>

<p>杀人游戏有三个角色，分别是警察、杀手和平民，大部分人觉得杀手赢的概率比较小，但个人觉得还是杀手这个角色比较好玩，玩得好的话完全可以秒杀全场，毕竟杀手是处于暗处的。那如何做一个优秀的杀手呢？</p>

<p>首轮当然可以根据自己的判断随意杀死一个，因为第一局里留下的信息不会太多，前提是杀手自己不要留下太多的线索，能不多说就尽量不多说，说多了反而不利。尽管大家都不会说什么，但还是要注意听其他人的发言，平民本身获知的信息量并不大，所以大部分是很平淡的描述（但也要注意高手，他们往往会把自己假装成平民，扰乱正常的分析），那些分析的有些道理的就是下一个目标了，他们可能就是警察。</p>

<!--more-->


<p>紧接着的一轮又该杀谁呢？保留那个争论最大的玩家A（除杀手外），然后杀死怀疑A身份的人B，这样在下一轮的描述中可以诱导其他人杀死A，这样大家从中获取到的信息也并不是太多，很多时候会认为这是理所当然的。当然，所有的杀手不可以同时指人A，毕竟不能把所有的杀手都暴露，这种情况下的投票数往往都是够的。</p>

<p>再该杀死谁呢？下一个目标就是上一轮没有指认A的玩家了，因为他们可能已经辨识出了某个杀手的身份，所以他们可能放弃那样一种权利。</p>

<p>当然，这个时候，大家的注意力可能已经注意到某个杀手了，毕竟冤死了那么多，这是杀手可以牺牲掉自己的伙伴，把自己伪装成平民，在下一局的时候杀死那个在该局论据最充分的玩家。在这种时刻，警察会想尽办法诱导平民去杀死某个杀手，而不是让意见分散，这也是不得已的选择。</p>

<p>被警察验出身份怎么办？那也没有关系，毕竟警察也不敢明确地指你，只会指大概的某一片。这种情况下，你也可以怀疑自己的身份，但末了也要转折一下，把怀疑的方向调整到其他人那里。通过巧妙的分析，完全可以躲过警察的追杀。</p>

<p>杀手可以利用夜间杀人的方式不断铲除平民和警察，而警察只能通过投票的方式（而且还不敢很明确地表明自己的身份）药死杀手，整体上看个人还是觉得杀手占优势，当然前提是要有足够的识别力可以辨出哪些是警察。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用过的旅游应用]]></title>
    <link href="http://txgcwm.github.io/blog/2015/05/07/shi-yong-guo-de-lu-you-ying-yong/"/>
    <updated>2015-05-07T22:10:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2015/05/07/shi-yong-guo-de-lu-you-ying-yong</id>
    <content type="html"><![CDATA[<p>世界这么大，却没有太多的时间出去走走，那怎么办？看论坛，看那些旅游App，看看别人是如何去发现和探索这个世界的。使用过的旅游相关的App不多，却有一些体验。</p>

<h1>马蜂窝</h1>

<p>这是最早使用的一个App了，13年想去婺源玩，所以就下载了一个，想看看相关的攻略。可是那里面汇集的是一本本小电子书，阅读效果不是太好，用了不久就删除了。</p>

<h1>在路上</h1>

<p>不知道从哪个渠道了解到了它，但一直很喜欢它，那里汇集了各路大神的游记，一看就觉得很高大上。不只是好看，它的功能也做得不错。</p>

<!--more-->


<h1>周末去哪儿</h1>

<p>这个App汇集的是城市里一些可以去的信息，信息比较杂乱，主打的并不是旅游，所以对它的兴趣不是很大。</p>

<h1>足记</h1>

<p>因为它电影风格的照片很火，跟随潮流，下载了一个玩玩，这种创意确实很不错，但整体的功能还有待提高。</p>

<h1>哪好玩</h1>

<p>这是杭州的一个创业公司做的App，昨天我才下载了，一个很简单的应用，目前没有发现吸引我的功能。</p>

<p>最想推荐的就是“在路上”了，但我想还应该有更好的旅游App会出现。</p>
]]></content>
  </entry>
  
</feed>

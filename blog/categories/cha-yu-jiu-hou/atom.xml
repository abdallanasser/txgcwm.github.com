<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: 茶余酒后 | 残剑]]></title>
  <link href="http://txgcwm.github.io/blog/categories/cha-yu-jiu-hou/atom.xml" rel="self"/>
  <link href="http://txgcwm.github.io/"/>
  <updated>2013-08-01T22:53:19+08:00</updated>
  <id>http://txgcwm.github.io/</id>
  <author>
    <name><![CDATA[残剑]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[关注你的是谁]]></title>
    <link href="http://txgcwm.github.io/blog/2013/08/01/guan-zhu-ni-de-shi-shui/"/>
    <updated>2013-08-01T22:46:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2013/08/01/guan-zhu-ni-de-shi-shui</id>
    <content type="html"><![CDATA[<p><img class="<a" src="href="http://ww1.sinaimg.cn/large/7834999djw1dorelc6br4j.jpg">http://ww1.sinaimg.cn/large/7834999djw1dorelc6br4j.jpg</a>"></p>

<p>仔细看了看自己的QQ好友，总数将近300多人，可实际会去交谈的大约50人以内。我们彼此生活在自己的小圈子里，即便开始了一段交谈，双方都会担心彼此之间的话题噶然而止，以致陷入尴尬的境地，所以我们索性不开始一段交流。</p>

<!--more-->


<p>QQ群是一个很好的东西，当我们想说的时候就在上面吼上一句，不想说的时候就默默地在旁观望，不会有“对面还有个人在等我的回话呢？我是否应该说点其它什么东西”的尴尬。同样，微信也有这么个优点。</p>

<p>即便我们经常交流的好友只有那么几个，但其他的好友依然需要他们静静的躺在我们的列表中，以防某一天我们会需要对方的帮助、咨询、交流。</p>

<p>每个人的好友圈里大体有这么几类人：同学、同事、朋友、客户以及网络上结交的网友。其中以前三类人居多，后两者相对较少。我们有那么多的好友，为何经常交流的朋友只有那么几个？可能跟工作环境和从事领域、个人性格和处事风格、生活背景、地域环境等等因素有关。</p>

<p>除了同事和客户外，其他人或许我们只是偶尔交流，但即便如此，我们也会被很多朋友默默的关注着。这里不讨论男女之间因爱慕或者是亲情而关注的话题，主要说的是普通朋友之间的那种关注。关注你的人大体有以下几类：对你发表的话题感兴趣的人、欣赏你的人、工作环境的同事、交心的朋友。</p>

<h1>对你发表的话题感兴趣的人</h1>

<p>当你发表了一个很有意思的话题，勾起了人们的好奇心，这时他们就会来看看。而如果你没有什么特别能够吸引他们的东西的时候，他们往往不会关注你。他们看重的是事情，更多的会去思考“这是什么样的事情？多有意思，要是能够多点什么就更好了”。</p>

<h1>欣赏你的人</h1>

<p>与前者不同，他们更看重的是你这个人——欣赏你的人格和你的思想，无论你发表什么样的说说或者文章他们都会来看看。他们更多的思考“你为什么会写下这些东西，想表达的是什么，为什么他想的跟我的想法都一样”，但他们往往不给你任何的评论，生怕自己所说的不合适而失去他们在你脑海中的映像。虽然他们平时也很少甚至是不跟你交流、交谈，当某一天他们的心里有千万头“草泥马”在奔腾、头脑中的“火花”在哧哧作响的时候，他们会找上你，和你大谈特谈。而你也发现他们身上的特质和你有共同点的时候，你们会进一步发展，成为交心的朋友。</p>

<h1>工作环境的同事</h1>

<p>这些人是很特殊的群体，起初他们关注你并不是因为你的话题和人本身，而是想通过一些事情和话语更加的了解你，进而增进彼此之间的认识，便于以后的交流。他们在适当的时候，也会和你讨论一些话题，分享一些观点和建议。时间久了，随着对你了解地更加深入，会慢慢地开始欣赏你，最后成为交心的朋友。他们有一个更大的优势，他们平时和你一起工作，更容易从实际工作中去了解你、认识你。</p>

<h1>交心的朋友</h1>

<p>他们不仅对你的话题感兴趣，对你本身更加感兴趣。当你述说某件事情或话题的时候，他们会加入到你的讨论中，发表他们的观点，同时也给出他们认为正确的意见。而这一类人往往也是你关注的对象，你们彼此欣赏着对方。</p>

<h1>我们的财富</h1>

<p>2012年的时候，美国企业状告新东方账目作假，致使新东方的股票大跌。中国企业家联合会的各位大佬询问“老俞，你实话实说，你们到底有没有做过亏心事。如果你说‘做过’，那以后你的事我们就不管了。如果你说‘没做过’，那我们会把新东方救回来。我们不要什么解释，只要你的一句话”。俞敏洪回道“我们没有做过”。第二天，几亿美金入场，买入了大量的新东方股票，将新东方从死亡的边缘救了回来。</p>

<p>朋友之间不需要任何的解释，他们始终理解你，知道你为什么那么做。而需要你给出解释的人，即便你是用事实在说话，他们也始终不相信你。珍惜那些关注我们的人，他们同样是我们人生的财富。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[聊聊测试]]></title>
    <link href="http://txgcwm.github.io/blog/2013/07/31/liao-liao-ce-shi/"/>
    <updated>2013-07-31T23:26:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2013/07/31/liao-liao-ce-shi</id>
    <content type="html"><![CDATA[<p><img class="<a" src="href="http://www.51testing.com/zhuanti/img/csvskf_02.gif">http://www.51testing.com/zhuanti/img/csvskf_02.gif</a>"></p>

<p>从工作到现在，一直有较长时间跟测试方面的人员交流，所以也顺道聊聊测试的话题。有一部分人只把测试看作是试用用户，并不认为她们在整个过程中能够起到多大的作用，而忽略了她们的巨大价值。一件产品只有通过测试的点头之后才能够走向市场，否则即便上市了每个人的心里都会胆寒，说不定在某个时刻就爆发了问题。测试不仅仅是高级的试用用户，更是一个开发师、设计师和分析师。</p>

<!--more-->


<p>在第一家设备公司的时候，经常去复现测试人员提交的bug，但总是测试不出来，于是就去找她们复现这些问题。当找到她们的时候，她们总能又一次把问题复现。我真的不了解那些测试人员是什么样的思维，很多bug能够被她们用奇特的方法测试出来。很多开发人员总是跑过去跟测试人员讲“你不能这么测试，你应该这么测试”，一般测试人员辩驳几句后会选择沉默。但她们还是坚持着自己的观点，然后把提交的测试问题重新返还给开发人员，只要开发人员不解决她们就不会把问题关闭，跟你死耗着，看你怎么办。由于跟测试人员待在一起时间长了，很了解她们的实力，所以我一般都不会自信的说“这个肯定没有问题，怎么可能出现这样的bug”。如果我真的那么自信的说话，当她们重新复现到问题的时候，我是否会无地自容呢？长久下来，当她们复现出问题的时候，她们都会很和蔼的说“没事，慢慢修复吧。如果复现不了，再来找我，我再帮你复现”。每次的交流都是心平气和，不会有不愉快的冲突。</p>

<p>到了第二家公司的时候，遇到了一个更好的测试人员。她不仅能够清楚的描述问题，还能够附带她的分析，对解决问题起到了很大的帮助。她经常会问我设备内软件的设计架构和原理，我也非常乐意告诉她这些东西。一旦她了解了，就会帮助我分析问题，这样就加快了我解决bug的速度。以下的一段文字是她提交某一bug的描述：</p>

<blockquote><p>【测试版本】：Vxxx</p>

<p>【测试步骤】： <br/>
1、PC接入终端（PCB板已增加屏蔽罩），通过VLC观看频点xxxxxx的节目流畅。 <br/>
2、手机接入终端，启动android客户端但不观看电视节目，此时观察VLC节目中周期性出现水幕或跳跃问题。分析原因是android客户端启动后会向终端获取状态信息。 <br/>
3、操作手机客户端观看电视节目，VLC和手机客户端的节目均播放流畅，分析原因是手机客户端在观看视频时不会获取心跳信息。 <br/>
4、启动windows客户端但不观看电视节目，VLC和手机客户端的节目又周期性出现水幕或跳跃问题。分析原因是windows客户端启动后回获取心跳信息。 <br/>
5、windows客户端观看电视节目后，VLC和手机客户端的节目扔会周期性出现水幕或跳跃问题。原因是windows客户端在节目播放过程中仍会获取状态信息。</p>

<p>问题：客户端周期性获取终端状态会导致节目播放时出现水幕，心跳机制需优化。</p>

<p>【测试结论】：客户端周期性获取心跳包会影响节目播放效果</p></blockquote>

<p>写的很清楚，分析得很有道理。我根据她提供的描述信息去查看问题，检测到引发问题的原因与上述描述的一致。正因她详细地描述测试现象及相关的对比实验、细致的分析，我仅花了几分钟的时间就解决了这个问题。如果没有她所做的工作，我可能会从“视频流传输”方面去分析，这或许会花费几个小时甚至几天的时间去跟踪这个问题。</p>

<p>我曾问过一个朋友“你们公司的测试人员会如何去做”，他回道“在自己的设备上遇到问题后再在使用其它公司的设备作对比测试，然后将问题提交给开发人员”。如他所述，很多测试人员都会做基本的对比测试，却缺少了自己对问题的必要分析。</p>

<p>一个好的测试人员不仅能够发现问题，还能够帮你分析问题且提出解决问题的方案。开发人员很多时候不应该去左右她们，不应该去影响她们，不应该给她们一个框架，她们的思维需要的就是天马行空！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[关于提建议]]></title>
    <link href="http://txgcwm.github.io/blog/2013/07/29/guan-yu-ti-jian-yi/"/>
    <updated>2013-07-29T20:20:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2013/07/29/guan-yu-ti-jian-yi</id>
    <content type="html"><![CDATA[<p><img class="<a" src="href="http://www.beidou119.com/uploadfile/2013/0106/20130106093231928.jpg">http://www.beidou119.com/uploadfile/2013/0106/20130106093231928.jpg</a>"></p>

<p>在一个公司里，我们是否应该提建议，又该如何去提？对于我来说是一个很难的问题，时常提一些建议却得不到对方的理解，甚至别人根本不屑听你讲的东西。慢慢地，也就没有了那个心情，让一切顺其发展。其实我也尝试着想让自己更好地去处理这件事情，也提了问题去询问网友，可得出的结果趋于一致性。以下是我在CU论坛上的提问，以及一些朋友的回复。</p>

<!--more-->


<blockquote><p>在公司里，员工间彼此讨论着公司的各个方面，却很少向上级主管提出。可能其中是有好的建议的，可始终没人提。尤其是对一些创业公司，我认为意见是很重要的。针对这一问题，各位朋友所在的公司又是如何对待员工提的意见，或者是如何鼓励员工提意见，又或者是各个员工针对该问题的态度是什么？</p>

<p>CTUOS: 。。。。看时候。。看领导吧。。提的多。。死的快。。。。。反正我现在就不说老。。。</p>

<p>forestiger: 遇到好领导提还行，不好的领导提不好死的快，所以一般不提。</p>

<p>action08: 关键还是看领导是否有愿意听的心态，，，不少企业领导为了表现自己是领导还是很专断的，甚至听到不同意见的人会打压，，文化文化。不少领导号称开明，我这里还是找到了案例，好话说说都好听；真正做得的高尚人还是难啊！</p>

<p>qinyiwang：感觉没有啥渠道，当面说？发邮件？</p></blockquote>

<p>从回复的结果看，大家都认为没有必要提，提了对自己还未必是好事。这样的一个结果，必然有其缘由。很多的领导表面上希望手下多提意见，表示“对事不对人”，可当员工真的提意见的时候就变成了“对人不对事”，说不定日后还有很多的小鞋子穿。一切只是形式而已，从来没有想过认真的执行一次。或许当面临巨大的危机才真正想执行，那时可能已经没有员工愿意提任何意见了。老是喊着“狼来了”，当狼真的来的时候又有谁会相信呢！虽然比喻不是很恰当，但又何其的相似。</p>

<p>看《贞观长歌》的时候，唐太宗曾提到“隋亡非炀帝一人之过，过在君臣。倘若群臣直言相谏，炀帝能够采纳一些谏言，也不至于如此快的亡国”。是啊，隋朝的灭亡是综合因素导致了这个结果。同样，一个公司也不可能因为一个人而兴起或衰败，是每一个个体因素综合的结果。不同的只是每个人在其中所占据的分量不同罢了。</p>

<p>自古君王死社稷，文臣死谏，武将死战！作为一个公司职员的我们，又该如何呢？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[一封关于“书写技术文档提议”的信]]></title>
    <link href="http://txgcwm.github.io/blog/2013/07/28/%5B%3F%5D-feng-guan-yu-shu-xie-ji-zhu-wen-dang-ti-yi-de-xin/"/>
    <updated>2013-07-28T14:50:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2013/07/28/[?]-feng-guan-yu-shu-xie-ji-zhu-wen-dang-ti-yi-de-xin</id>
    <content type="html"><![CDATA[<p><img class="<a" src="href="http://img2.itokit.com/uploadfile/2012/0308/20120308113544112.gif">http://img2.itokit.com/uploadfile/2012/0308/20120308113544112.gif</a>"></p>

<p>中国有句古话叫“授人以鱼不如授人以渔”，说的是传授给人既有知识，不如传授给人学习知识的方法。道理其实很简单，鱼是目的，钓鱼是手段，一条鱼能解一时之饥，却不能解长久之饥，如果想要永远有鱼吃，那就要学会钓鱼的方法。</p>

<!--more-->


<p>往往很多人理解这句话的时候是从“传授者”的角度出发，觉得“应该如何去做，而不应该如何去做，哪一种才是更好的选择”；然而，在某些特定的环境下却需要从“受众者”的角度去思考，作为一个“受众者”应该明白的问自己“此时此刻，我需要的是什么”。对于一个饥寒交迫的人来说，当然更希望得到那一框鱼以解燃眉之急，后续的生存并非一定要靠钓鱼才能为继；而对于一个已经解决温饱的人来说，更希望的是掌握钓鱼的技能，以后靠自己的垂钓便能享受到美味的鱼儿。</p>

<p>作为一个“受众者”，它是利益的所得者，在相应的环境下，明明白白知道自己想要什么才是最重要的。</p>

<p>对于一个公司来说，同样适用以上的那句古话。从公司的角度来看，可以把公司当作是一个“受众者”，把公司里的员工当作“传授者”。公司处于不同的发展阶段，对员工的需求会有所不同。每年的这个时候是一个“暗流涌动”的季节，难免会给公司带来一定的挑战。针对这个挑战，对公司来说并不是一件好事，怎么可能把它说成是“受众者”呢？针对这种问题，从辩证的角度去分析它会显得合理些。</p>

<p>企业间的人才流动交流，往往都有一段时间用来重新布置及安排任务，而这个安排的任务往往因时、因势而定。</p>

<p>如果公司的一切条件都已具备，那么让员工尽量去完成手头上的项目，对于公司这个“受众者”来说的话是利益最大化的。如果没有一个后来者能够顶替任务的话，那么尽量留下一些技术文档，对于公司来说才是利益最大化的。</p>

<p>我们的公司还很年轻，目前依旧处于发展的阶段，某些方面还不是很完善。针对公司现有的状况，谈谈我个人所看到的现象。之前接替服务器端工作的时候，尝试着去看wiki上的相关文档，发现XXX留下的文档对于后来者是很有价值的，很容易了解到“如何部署服务器”、“如何运行服务器上的监控脚本”等等。终端的前任离开了，但Windows方面的工具等一些东西却是有遗失的。虽然有些东西用作测试等其它方面的使用，但它却是非常有价值的东西（可以用来分析问题，解决相应的问题，缩短调试的时间等）。</p>

<p>记得当初第一份工作的时候，前东家的合同上有这么一句话（在为公司服务期间，所编写的代码和文档的所有权归公司所有），当时我笑了，我心想“系统已经如此的稳定，我们只是解解bug，会有什么东西留下，这是不是杞人忧天了”。然而，我幼稚的想法是非常错误的。除了平时解决bug，我们还是为公司开发了一些功能模块。公司强调着“所有权”的时候，它更侧重强调了“你要为公司留下什么”。一旦有人员流动时，借助着已有的文档，新的同仁就能够很快接手工作。虽然口头上的传授也是一种方法，但口口相传往往会产生一些谬误，也容易失去一些重要的东西。</p>

<p>这让我想起了《笑傲江湖》的一个段子“岳不群的师父传授给它几招《辟邪剑谱》，并嘱咐他‘这几招功夫华山派要代代相传’。岳不群看了之后，也认为那只是平庸无奇的几招。见识了林平之耍的几招之后，觉得跟自己以前学习的那几招很相似，觉得林家的《辟邪剑谱》就是本门失传已久的武功绝学。自此以后，他就开始费劲心思的去寻找那本书。当他得到的时候，他仅花费了不长的时间就学会了其中所有的武功”。在岳不群之前，华山派的那几招功夫传了好几代，却什么也没有悟出来，究其原因缺的就是《辟邪剑谱》那本书。假设华山派没有失去那本武功秘籍，‘辟邪剑法’相信也能够跟‘紫霞神功’一样，代代相传。</p>

<p>可见古语“好记性不如烂笔头”是值得让人深思的。何况一有变动的话，“好记性”已不在公司内部，成为了不可控因素。即便凭借以往的关系能够获取帮助，但他已不存在为公司服务的义务，帮不帮完全在乎心情。终端已尝试着整理一些文档，努力去阐明系统的架构。人可能往往看不清自己，所以这里暂且不论终端。只说说Windows客户端和测试，该两项在Wiki上的文档也是相对较少的。</p>

<p>正如前面提到的，Windows方面的东西是有遗失的。目前，tuner模块的code是由Windows客户端方面维护的，至于“如何编译”、“如何烧写”、“如何更改mac地址和id”等等方面的文档是没有的。尽管只要花时间就能找到方法（这属于一种重复造轮子的行为，有文档的话，我们只要一步步操作即可），但已经会的东西我们又何必去浪费时间去研究呢？客户端的功能虽然已经完备，但也缺少文档的说明。虽然看code加上其他人员对系统的介绍，作为一个后来者也能够逐步接替该部分工作。但这就好比“岳不群不停地在那里耍大招，左冷禅在一旁观看（即便岳不群愿意这样做，左冷禅也未必能够学习到‘飞针’那一招）”那样，既费时，又不能体会其中真正的奥秘。</p>

<p>很多人并不重视测试的作用，认为测试的工作有很多人可以替代。但我不以为然，一个好的测试人员描述的不仅仅是测试的表象，更多的会指出问题的根源，往往会起到指导开发人员的作用。测试方面也很需要一些文档，而且这是很有必要的。虽然测试用例目前已经较完备，可谁来告诉后来者“如何设计同样有效的测试用例”、 “如何正确有效的提交bug（这减少了开发和测试之间一些不必要的交互）”、“如何测试该系统”呢？我承认通过“开发者在某种意义上去指导后来的测试人员”来缩短学习时间。但我并不认为这是一种有效、好的方法，开发者往往带有主观色彩，会告诉测试人员“你应该怎么做，不应该怎么做”，这往往会误导测试（按照开发讲的东西去测试，而未能发现其中深藏的问题）。测试人员就应该专注于前辈留下的文档而脱离于开发者 ，站在客户的角度去思考问题。</p>

<p>如今，需要做的并不一定是要完成某项任务，而是要一些有意义的文档。任务就好比是“鱼”，是目的；而文档就好比是“以渔”，是手段。现今公司要的是“以渔”（作为一个“受众者”是目前所能获取到的最大利益），避免未来重复的造轮子。</p>

<p>虽然这只是一个建议，但还是诚恳的希望您能慎重的考虑一下。文中难免有错误的出现，敬请谅解！</p>

<p>书于蒋村兴达苑21幢2单元401，2013年3月25日23时36分</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[略说博客]]></title>
    <link href="http://txgcwm.github.io/blog/2013/07/28/lue-shuo-bo-ke/"/>
    <updated>2013-07-28T12:29:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2013/07/28/lue-shuo-bo-ke</id>
    <content type="html"><![CDATA[<p><img class="<a" src="href="http://www.youdao.com/help/toys/bloggadget/001/1.gif">http://www.youdao.com/help/toys/bloggadget/001/1.gif</a>"></p>

<p>在平时搜索技术问题的时候，收藏了一些技术博客。我发现博主的所在地域、服务公司、学习背景、年龄分布都有一些特性，初步作了一些整理同大家分享。在这里只论那些搭建独立博客的博主，而不讨论那些在各大论坛上构建博客的博主。</p>

<!--more-->


<h1>博主分布图</h1>

<h2>区域分布</h2>

<p>华东以上海、杭州为主，互联网企业相对较多，其公司的开放、自由、分享的文化起到了很关键的作用；华南以深圳、广州为主；华北以北京为主；中西部以重庆、武汉、西安为主，很多是学生博主群体，学校的文化在这方面起到了很重要的作用；西南部以成都为主。</p>

<h2>公司分布</h2>

<p>阿里系最多，腾讯系次之，网易系也有不少，其它较多的是一些新兴的互联网公司（这其中很多有阿里系的身影）。从这方面可以看出，阿里的公司氛围是很不错的，大伙都有分享的精神。补充一点，阿里也分享了很多的开源项目，到github上可以找到。</p>

<h2>学校分布</h2>

<p>西安邮电大学最多，华中科技大学次之，西安电子科技大学、西安交通大学、浙江大学也有不少，其它大学相对较少。所有大学中，西邮给我的映像最好，它们的学生在Linux方面有较高的造诣，出现了很多这方面的牛人。</p>

<h2>年龄分布</h2>

<p>以20～30岁年龄段居多，属于新兴博主，大多以技术路线为主；30～40岁年龄段的博主次之，属于资深博主，不仅有丰富的技术知识，还有精彩的人生阅历及感悟方面的文章；10～20岁年龄段的相对较少，属于后起之秀，大多也以技术为主线，其中年龄最小的大概是12、13岁。很多“老人”坚持写博客6、7年以上，实在是一件不容易的事情；小博主的崛起，真正应了“后生可畏”，想想自己那个年龄段都不知道自己想要做什么，看来“前浪”很快就会被“拍死在沙滩上”。</p>

<h1>杂说</h1>

<p>曾经在QQ空间、网易、其它技术论坛上写过博客，但都因为各种各样的原因（没有专一的主题，工作的变更导致技术方向的改变，人性的懒散等等）没有坚持下来。虽然不在那些博客中写文章，偶尔还是会去看看自己之前写的东西。</p>

<p>2011年的时候决定改变一下自己，觉得应该把自己学习到的东西记录一下，与网上的朋友们分享分享，所以在CU博客上安了家。这个博客从那时到现在一直有更新，大多是个人的学习笔记及从网络上转载的文章，后续也会继续更新。</p>

<p>很不幸的是，2013年年初的时候CU博客改版了，书写博客的整体体验很差，也向管理员反应过这个事件，可并未察觉出它们有更新博客系统的迹象。慢慢的就开始不爽了！5月份的时候就基于github和Octopress搭建了一个个人独立博客，陆陆续续到7月份才构建了一个自己认为比较满意的博客。独立博客的好处在于其可定制性强，不好的地方就是对于一个小白博主来说有一定的技术难度。</p>

<p>如果你是技术狼/媛，对Linux方面有兴趣的话可以看我的 <a href="http://blog.chinaunix.net/uid/25885064.html">CU博客</a> 和 <a href="http://txgcwm.github.io/">个人独立博客</a> 。</p>
]]></content>
  </entry>
  
</feed>

<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Unix/Linux | 残剑]]></title>
  <link href="http://txgcwm.github.io/blog/categories/unix-linux/atom.xml" rel="self"/>
  <link href="http://txgcwm.github.io/"/>
  <updated>2014-07-26T13:49:40+08:00</updated>
  <id>http://txgcwm.github.io/</id>
  <author>
    <name><![CDATA[残剑]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Linux下批量将md文件转换为html文件]]></title>
    <link href="http://txgcwm.github.io/blog/2014/07/02/linuxxia-pi-liang-jiang-mdwen-jian-zhuan-huan-wei-htmlwen-jian/"/>
    <updated>2014-07-02T21:39:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/07/02/linuxxia-pi-liang-jiang-mdwen-jian-zhuan-huan-wei-htmlwen-jian</id>
    <content type="html"><![CDATA[<p>要将markdown文件转换成html文件，可以用discount或python-markdown软件包提供的markdown工具。
<code>
$ sudo apt-get install discount
</code>
或
<code>
$ sudo apt-get install python-markdown
</code></p>

<p>用discount提供的markdown工具转换：
<code>
$ markdown -o Release-Notes.html Release-Notes.md
</code></p>

<p>用python-markdown提供的markdown_py工具转换：
<code>
$ markdown_py -o html4 Release-Notest.md &gt; Release-Notes.html
</code></p>

<p>如果要生成PDF，可以用python-pisa提供的xhtml2pdf转换：
<code>
$ sudo apt-get install python-pisa
$ xhtml2pdf --html Release-Notes.html Release-Notes.pdf
</code></p>

<!--more-->


<p>也可以在文档目录下放置一个Makefile来自动完成转换过程：
```</p>

<h1>Makefile</h1>

<p>MD = markdown
MDFLAGS = -T
H2P = xhtml2pdf
H2PFLAGS = &mdash;html</p>

<p>SOURCES := $(wildcard <em>.md)
OBJECTS := $(patsubst %.md, %.html, $(wildcard </em>.md))
OBJECTS_PDF := $(patsubst %.md, %.pdf, $(wildcard *.md))</p>

<p>all: build</p>

<p>build: html pdf</p>

<p>pdf: $(OBJECTS_PDF)</p>

<p>html: $(OBJECTS)</p>

<p>$(OBJECTS_PDF): %.pdf: %.html</p>

<pre><code>$(H2P) $(H2PFLAGS) $&lt; &gt; $@
</code></pre>

<p>$(OBJECTS): %.html: %.md</p>

<pre><code>$(MD) $(MDFLAGS) -o $@ $&lt;
</code></pre>

<p>clean:</p>

<pre><code>rm -f $(OBJECTS)
</code></pre>

<p>```</p>

<p>html输出：
<code>
$ make html
</code></p>

<p>pdf输出：
<code>
$ make pdf
</code></p>

<p>如果markdown的内容是中文，那么转换出来的html在浏览器中打开就无法自动识别编码，pdf更惨，直接是一堆乱码。这时可以借助markdown对html标记的支持，在markdown文件中加入编码信息。例如我们要将markdown转换为html文件，可以在文件的开头加上meta标记，指明编码格式：
<code>
$ sed -i '1i\&lt;meta http-equiv="content-type" content="text/html; charset=UTF-8"&gt;' *.md
</code></p>

<p>使用以上的方法，转换出来的效果并不理想，所以尝试使用pandoc去转换，在Ubuntu上使用以下指令安装：
<code>
$ sudo apt-get autoremove pandoc
$ sudo apt-get install cabal-install
$ cabal update
$ cabal install pandoc
</code></p>

<p>html输出：
<code>
$ pandoc Release-Notest.md -o Release-Notes.html
</code></p>

<p>pdf输出：
<code>
$ pandoc Release-Notest.md -o Release-Notes.pdf
</code></p>

<p><big>参考文章</big></p>

<p><a href="http://blog.csdn.net/makenothing/article/details/8450975">Linux下批量将md文件批量转换为html文件</a><br/>
<a href="http://www.ituring.com.cn/article/10044">如何在Linux下使用Markdown进行文档工作</a> <br/>
<a href="http://higrid.net/c-art-pandoc_command.htm">利用Pandoc转换markdown和HTML、LaTeX</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Grub Rescue修复方法]]></title>
    <link href="http://txgcwm.github.io/blog/2014/07/01/grubrescuexiu-fu-fang-fa/"/>
    <updated>2014-07-01T23:46:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/07/01/grubrescuexiu-fu-fang-fa</id>
    <content type="html"><![CDATA[<p>在笔记本电脑上安装了两个Linux系统，有一个几乎不用，所以决定把它给删除了，在网上看到<a href="http://www.linuxidc.com/Linux/2014-06/103871.htm">OS-Uninstaller（操作系统卸载）——轻松删除电脑中多余的操作系统</a>一文可以操作成功，就决定试试了。本着学习的态度，边操作边作笔记，把它记录在了<a href="http://txgcwm.github.io/blog/2014/06/30/cao-zuo-xi-tong-xie-zai-ruan-jian-%3Aos-uninstaller/">这里</a>。可天公并不眷恋我这个爱折腾的孩子，操作并没有成功，开机显示如下信息：
```
GRUB loading</p>

<p>error:unknow filesystem</p>

<p>grub rescue>
```</p>

<p>下面几种操作会导致这种问题：</p>

<ul>
<li>想删除Ubuntu，于是直接在Windows下删除/格式化了Ubuntu所在的分区。</li>
<li>调整磁盘，利用工具合并/分割/调整/删除分区，使磁盘分区数目发生了变化。</li>
<li>重新安装系统，把Linux安装到了新分区，原有分区已经格式化，但是没有重新安装grub2。</li>
<li>用Ubuntu备份工具/衍生版制造工具等，把主分区恢复成了8.X的老版本，结果老版本的grub是grub1,于是把grub2破坏掉了。</li>
</ul>


<p>总归是由于操作者不知道grub2分为两部分，一部分（一般情况下）写在了mbr上，另一部分写在了某个分区的<code>/boot/grub</code>目录（如果<code>/boot</code>单独分区，则直接写在对应分区的<code>/grub</code>目录）里面。由于上述操作，致使grub2的mbr里面的那一部分找不到<code>/grub</code>目录里面的那一部分了（或者另一部分已经删除了）。</p>

<h1>彻底删除grub2，让这个提示不再出现</h1>

<p>适用于已经不想再使用Ubuntu，要转回Windows的人。只要有Windows启动盘（非Ghost），用它启动，至选择安装位置，不用真正安装，退出重启就可以。或者用它启动到故障修复台，运行fixboot或者fixmbr都可以。
win7命令行下，则是执行：
<code>
BootRec.exe /fixmbr
</code>
<code>/fixmbr</code>修复mbr，<code>/FixBoot</code>修复启动扇区，<code>/ScanOs</code>检测已安装的win7，<code>/RebuildBcd</code>重建bcd。</p>

<!--more-->


<h1>重新安装、修复grub2</h1>

<h2>先使用<code>ls</code>命令，找到Ubuntu安装在哪个分区</h2>

<p>在grub rescue>下输入以下命令：
<code>
ls
</code>
会罗列所有的磁盘分区信息，比如：
<code>
(hd0,1),(hd0,5),(hd0,3),(hd0,2)
</code></p>

<h2>依次调用如下命令： X表示各个分区号码</h2>

<p>如果<code>/boot</code>没有单独分区，用以下命令：
<code>
ls (hd0,X)/boot/grub
</code></p>

<p>如果<code>/boot</code>单独分区，则用下列命令：
<code>
ls （hd0,X)/grub
</code></p>

<p>正常情况下，会列出来几百个文件，很多文件的扩展名是<code>.mod</code>、<code>.lst</code>和<code>.img</code>，还有一个文件是<code>grub.cfg</code>。假设找到（hd0,5）时，显示了文件夹中的文件，则表示Linux安装在这个分区。</p>

<h2>如果找到了正确的grub目录，则设法临时性将grub的两部分关联起来</h2>

<p>以下是<code>/boot</code>没有单独分区的命令：
<code>
grub rescue&gt;set root=(hd0,5)
grub rescue&gt;set prefix=(hd0,5)/boot/grub
grub rescue&gt;insmod /boot/grub/normal.mod
</code></p>

<p>以下是<code>/boot</code>单独分区的命令：
<code>
grub rescue&gt;set root=(hd0,5)
grub rescue&gt;set prefix=(hd0,5)/grub
grub rescue&gt;insmod /grub/normal.mod
</code></p>

<p>为了显示出丢失的grub菜单，需要调用如下命令：
<code>
grub rescue&gt;normal
</code>
如果重启后问题依旧存在，则需要进入Linux中对grub进行修复。启动起来，进入Ubuntu之后，在终端执行：
<code>
$ sudo update-grub
$ sudo grub-install /dev/sda
</code>
sda是硬盘号码，千万不要指定分区号码，例如sda1，sda5等都不对。</p>

<h2>如果找不到正确的/grub目录，则尝试寻找是否有linux核心文件，则依次在<code>grub rescue&gt;</code>下调用如下命令： X表示各个分区号码</h2>

<p>如果<code>/boot</code>没有单独分区：
<code>
ls (hd0,X)/boot
</code></p>

<p>如果<code>/boot</code>单独分区：
<code>
ls （hd0,X)
</code>
找名字类似<code>vmlinuz-3.0.0-12-generic</code>这样的文件，这是Linux核心文件，如果找到，记下(hd0,X)中的X值。假设找到（hd0,5）时，显示了文件夹中的文件。</p>

<p>然后用live cd或者live usb启动，在live cd的Ubuntu终端中依次输入以下命令（sda5中的5必须改成上面记录下来数值）：</p>

<p>如果<code>/boot</code>没有单独分区：
<code>
sudo mount /dev/sda5 /mnt
sudo grub-install --boot-directory=/mnt/boot /dev/sda
</code></p>

<p>如果<code>/boot</code>单独分区：
<code>
sudo mount /dev/sda5 /mnt
sudo grub-install --boot-directory=/mnt /dev/sda
</code></p>

<p>然后重新启动即可。</p>

<p>以上这两句命令也可以解决“安装Ubuntu时grub安装位置不对，没有将grub安装到/dev/sda，造成启动时不出现Ubuntu启动项直接进入Windows”的问题，不过需要自行确定sda5中的5改成什么数字。</p>

<h2>如果连Linux核心文件都没有，那么就得彻底重新安装</h2>

<br></br>  


<p>找到了grub分区的目录，却找不到<code>normal.mod</code>这个文件，所以最后直接借助U盘里的Linux系统来完成修复了。面对这种状况的时候，最坏的打算就是重新安装系统了，可惜的就是那些辛辛苦苦收集的资料了。不过谁让自己瞎折腾的呢？这一切代价都需要自己去承担。不过索性有强大的网络，让我找到了解决的措施，在此感谢那些无私奉献的Linux爱好者辛勤的付出，是他们的存在才让生活更美好！</p>

<br></br> 


<p><big>参考文章</big></p>

<p><a href="http://www.2cto.com/os/201111/112327.html">Grub Rescue修复方法</a> <br/>
<a href="http://blog.sina.com.cn/s/blog_4d6c45250100wxnq.html">grub rescue修复方法</a> <br/>
<a href="http://www.cnblogs.com/samcn/archive/2011/03/30/1999615.html">Ubuntu启动问题以及Grub Rescue修复方法</a> <br/>
<a href="http://blog.csdn.net/jikiwh/article/details/5497900">Grub Rescue来修复Grub 问题</a> <br/>
<a href="http://blog.csdn.net/tody_guo/article/details/7537454">grub rescue模式下启动并修复</a> <br/>
<a href="http://tech.ccidnet.com/art/738/20100803/2140203_1.html">Ubuntu Grub Rescue几种修复方法</a> <br/>
<a href="http://blog.csdn.net/miromelo/article/details/6132702">grub rescue修复</a> <br/>
<a href="http://openwares.net/linux/grub_rescue_unkown_filesystem.html">grub rescue 模式下引导修复</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu系统清理缓存、垃圾、多余内核]]></title>
    <link href="http://txgcwm.github.io/blog/2014/07/01/ubuntuxi-tong-qing-li-huan-cun-%2C-la-ji-%2C-duo-yu-nei-he/"/>
    <updated>2014-07-01T22:51:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/07/01/ubuntuxi-tong-qing-li-huan-cun-,-la-ji-,-duo-yu-nei-he</id>
    <content type="html"><![CDATA[<p>Linux不会产生无用垃圾文件，但是在升级后它不会自动删除缓存中的文件，比较占系统硬盘资源。</p>

<h1>删除缓存</h1>

<h2>清理升级缓存以及无用包的</h2>

<p><code>
$ sudo apt-get autoclean              清理旧版本的软件缓存
$ sudo apt-get clean                  清理所有软件缓存
$ sudo apt-get autoremove             删除系统不再使用的孤立软件
</code></p>

<h2>清理opera/firefox的缓存文件</h2>

<p><code>
$ ls ~/.opera/cache4
$ ls ~/.mozilla/firefox/*.default/Cache
</code></p>

<h2>清理Linux下孤立的包</h2>

<p><code>
$ sudo apt-get install deborphan -y
</code></p>

<h2>卸载tracker</h2>

<p>tracker不仅会产生大量的cache文件，而且还会影响开机速度，所以在新得立里面删掉就行。</p>

<!--more-->


<h1>删除软件</h1>

<p>Ubuntu软件的删除一般用<code>Ubuntu软件中心</code>或<code>新得立</code>就能搞定，但用命令更快更好。
<code>
$ sudo apt-get remove --purge 软件名
$ sudo apt-get autoremove                删除系统不再使用的孤立软件
$ sudo apt-get autoclean                 清理旧版本的软件缓存
$ dpkg -l | grep ^rc | awk '{print $2}' | sudo xargs dpkg -P    清除残余的配置文件保证干净
</code>
包管理的临时文件目录为<code>/var/cache/apt/archives</code>,没有下载完的在<code>/var/cache/apt/archives/partial</code>。</p>

<h1>删除多余内核</h1>

<ul>
<li><p>查看当前Ubuntu系统使用的内核；
<code>
$ uname -a
</code></p></li>
<li><p>查看所有内核；
<code>
$ dpkg --get-selections | grep linux
</code></p></li>
<li><p>小心删除不需要的内核；
<code>
$ sudo apt-get remove linux-image-2.6.32-22-generic
</code></p></li>
</ul>


<p><code>linux-image-xxxxxx-generic</code>就是要删除的内核版本，<code>linux-headers-xxxxxx</code>和<code>linux-headers-xxxxxx-generic</code>中间有<code>xxxxxx</code>那段的旧内核都能删，一般选内核号较小的删。</p>

<ul>
<li>清理<code>/usr/src</code>目录，删除已经卸载的内核目录。</li>
</ul>


<br></br>


<p><big>参考文章</big></p>

<p><a href="http://my.oschina.net/zhangqingcai/blog/23994">清理Ubuntu系统的缓存、垃圾、多余内核</a> <br/>
<a href="http://www.2cto.com/os/201304/206100.html">Ubuntu清理boot分区</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[操作系统卸载软件：OS-Uninstaller]]></title>
    <link href="http://txgcwm.github.io/blog/2014/06/30/cao-zuo-xi-tong-xie-zai-ruan-jian-%3Aos-uninstaller/"/>
    <updated>2014-06-30T21:20:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/06/30/cao-zuo-xi-tong-xie-zai-ruan-jian-:os-uninstaller</id>
    <content type="html"><![CDATA[<p>OS-Uninstaller提供了一个图形化的界面，可以清除Windows, MacOS, Ubuntu以及其它的操作系统，可谓是强大又好用。</p>

<p>Ubuntu下通过添加PPA安装，打开终端输入：
<code>
$ sudo add-apt-repository ppa:yannubuntu/boot-repair
</code></p>

<p>然后输入以下内容回车:
<code>
$ sudo sed 's/trusty/saucy/g' -i /etc/apt/sources.list.d/yannubuntu-boot-repair-trusty.list
</code></p>

<p>执行以下命令安装:
<code>
$ sudo apt-get update; sudo apt-get install -y os-uninstaller &amp;&amp; os-uninstaller
</code>
安装完之后，软件会自己启动。</p>

<p>也可以直接下载包含有OS-Uninstaller的镜像刻录使用，点击<a href="http://sourceforge.net/projects/boot-repair-cd/">这里</a>下载。</p>

<!--more-->


<p>该软件需要安装lvm2，可以在软件中心搜索lvm安装。</p>

<p>启动操作系统卸载（OS-Uninstaller的中文名），打开后会看到正在扫描操作系统界面。中间可能会弹出提示<code>Is there RAID on this computer?</code>，一般选否就可以。扫描完成后软件会列出电脑上所有的操作系统，可以选定自己要卸载的操作系统，然后确定。会看到再确认窗口，下面有很多高级选项，选择默认即可，点击应用。接下来的几步很重要，请务必确认操作正确，以免造成损失。</p>

<p>卸载GRUB：
<code>
$ sudo dpkg --configure -a
$ sudo apt-get install -fy
$ sudo apt-get install -y --force-yes lvm2
$ sudo apt-get purge -y --force-yes grub*
</code>
执行到最后一个指令的时候，出现以下的错误（还未找到解决措施）：
```
Reading package lists&hellip; Done
Building dependency tree     <br/>
Reading state information&hellip; Done
Note, selecting &lsquo;grub-legacy-doc&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-efi-amd64-bin&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-efi-amd64-dbg&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-emu-dbg&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;libgruff-ruby&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;ruby-gruff&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-firmware-qemu&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub2&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-efi-ia32-bin&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-efi-ia32-dbg&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-theme-starfield&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-efi-amd64&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-disk&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;longrun&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;fgrun&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub2-common&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-imageboot&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;libgruff-ruby1.8&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-efi-ia32&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-efi-ia64&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;kde-config-grub2&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-pc&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;libgruel3.6.1&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub2-splashimages&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-gfxpayload-lists&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-efi-amd64-signed&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;libgruff-ruby-doc&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;espresso-grub&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-ipxe&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-coreboot-bin&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-coreboot-dbg&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-linuxbios&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;wmlongrun&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-splashimages&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-pc-bin&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-pc-dbg&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-rescue-pc&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-legacy&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-ieee1275&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;congruity&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-ieee1275-bin&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-yeeloong&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-ieee1275-dbg&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grun&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-efi&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-doc&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-invaders&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-emu&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;grub-common&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-coreboot&rsquo; for regex &lsquo;grub<em>&rsquo;
Note, selecting &lsquo;sabily-grub-artwork&rsquo; for regex &lsquo;grub</em>&rsquo;
Note, selecting &lsquo;grub-legacy-ec2&rsquo; for regex &lsquo;grub<em>&rsquo;
Package &lsquo;grub-efi-ia64&rsquo; is not installed, so not removed
Package &lsquo;grub-yeeloong&rsquo; is not installed, so not removed
Package &lsquo;grub-legacy&rsquo; is not installed, so not removed
Package &lsquo;espresso-grub&rsquo; is not installed, so not removed
Package &lsquo;grub-efi-amd64-signed&rsquo; is not installed, so not removed
Package &lsquo;grub&rsquo; is not installed, so not removed
Package &lsquo;grub-common&rsquo; is not installed, so not removed
Package &lsquo;grub-doc&rsquo; is not installed, so not removed
Package &lsquo;grub-efi&rsquo; is not installed, so not removed
Package &lsquo;grub-efi-amd64&rsquo; is not installed, so not removed
Package &lsquo;grub-efi-amd64-bin&rsquo; is not installed, so not removed
Package &lsquo;grub-efi-amd64-dbg&rsquo; is not installed, so not removed
Package &lsquo;grub-efi-ia32&rsquo; is not installed, so not removed
Package &lsquo;grub-efi-ia32-bin&rsquo; is not installed, so not removed
Package &lsquo;grub-efi-ia32-dbg&rsquo; is not installed, so not removed
Package &lsquo;grub-gfxpayload-lists&rsquo; is not installed, so not removed
Package &lsquo;grub-legacy-doc&rsquo; is not installed, so not removed
Package &lsquo;grub-pc-bin&rsquo; is not installed, so not removed
Package &lsquo;grub-pc-dbg&rsquo; is not installed, so not removed
Package &lsquo;grub2-common&rsquo; is not installed, so not removed
Package &lsquo;congruity&rsquo; is not installed, so not removed
Package &lsquo;fgrun&rsquo; is not installed, so not removed
Package &lsquo;grub-coreboot&rsquo; is not installed, so not removed
Package &lsquo;grub-coreboot-bin&rsquo; is not installed, so not removed
Package &lsquo;grub-coreboot-dbg&rsquo; is not installed, so not removed
Package &lsquo;grub-disk&rsquo; is not installed, so not removed
Package &lsquo;grub-emu&rsquo; is not installed, so not removed
Package &lsquo;grub-emu-dbg&rsquo; is not installed, so not removed
Package &lsquo;grub-firmware-qemu&rsquo; is not installed, so not removed
Package &lsquo;grub-ieee1275&rsquo; is not installed, so not removed
Package &lsquo;grub-ieee1275-bin&rsquo; is not installed, so not removed
Package &lsquo;grub-ieee1275-dbg&rsquo; is not installed, so not removed
Package &lsquo;grub-imageboot&rsquo; is not installed, so not removed
Package &lsquo;grub-invaders&rsquo; is not installed, so not removed
Package &lsquo;grub-ipxe&rsquo; is not installed, so not removed
Package &lsquo;grub-linuxbios&rsquo; is not installed, so not removed
Package &lsquo;grub-rescue-pc&rsquo; is not installed, so not removed
Package &lsquo;grub-splashimages&rsquo; is not installed, so not removed
Package &lsquo;grub-theme-starfield&rsquo; is not installed, so not removed
Package &lsquo;grub2&rsquo; is not installed, so not removed
Package &lsquo;grub2-splashimages&rsquo; is not installed, so not removed
Package &lsquo;grun&rsquo; is not installed, so not removed
Package &lsquo;kde-config-grub2&rsquo; is not installed, so not removed
Package &lsquo;libgruel3.6.1&rsquo; is not installed, so not removed
Package &lsquo;libgruff-ruby&rsquo; is not installed, so not removed
Package &lsquo;libgruff-ruby-doc&rsquo; is not installed, so not removed
Package &lsquo;libgruff-ruby1.8&rsquo; is not installed, so not removed
Package &lsquo;longrun&rsquo; is not installed, so not removed
Package &lsquo;ruby-gruff&rsquo; is not installed, so not removed
Package &lsquo;sabily-grub-artwork&rsquo; is not installed, so not removed
Package &lsquo;wmlongrun&rsquo; is not installed, so not removed
Package &lsquo;grub-legacy-ec2&rsquo; is not installed, so not removed
The following packages will be REMOVED:
  grub-pc</em>
0 upgraded, 0 newly installed, 1 to remove and 2 not upgraded.
After this operation, 558 kB disk space will be freed.
(Reading database &hellip; 1115878 files and directories currently installed.)
Removing grub-pc &hellip;
dpkg: error processing grub-pc (&mdash;purge):
 subprocess installed pre-removal script returned error exit status 10
No apport report written because MaxReports is reached already</p>

<pre><code>                                                          Errors were encountered while processing:
</code></pre>

<p> grub-pc
E: Sub-process /usr/bin/dpkg returned an error code (1)
```
如果出现选择窗口，可使用Tab键、空格键和回车键以将GRUB安装至希望的磁盘上。</p>

<p>重装GRUB，按照说明操作（空格可以选定安装位置，tab键切换选项，回车确认操作），按前进继续下一步：
<code>
$ sudo apt-get install -y --force-yes grub-pc
</code></p>

<p>至此，已经完成了所有的操作，剩下来的工作就是软件自动删除要删除的系统，成功后会出现提示信息。卸载完成后重启电脑，确实完全删除。</p>

<p><big>参考文章</big></p>

<p><a href="http://www.linuxidc.com/Linux/2014-06/103871.htm">OS-Uninstaller（操作系统卸载）——轻松删除电脑中多余的操作系统</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CentOS安装SVN]]></title>
    <link href="http://txgcwm.github.io/blog/2014/06/20/centosan-zhuang-svn/"/>
    <updated>2014-06-20T22:07:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/06/20/centosan-zhuang-svn</id>
    <content type="html"><![CDATA[<h1>安装ssh服务器和subversion服务器</h1>

<p>```</p>

<h1>yum update</h1>

<h1>yum install openssh-server</h1>

<h1>yum install subversion</h1>

<p>```</p>

<h1>创建登陆svn的用户</h1>

<p>```</p>

<h1>useradd test // 添加test用户</h1>

<h1>groupadd svn // 添加svn用户组</h1>

<h1>usermod -a -G svn test // 将test用户添加到svn用户组</h1>

<p>```
另外，如果test用户不存在，则可以用以下语句完成：</p>

<p>```</p>

<h1>useradd -g svn test</h1>

<p>```</p>

<h1>建立用户存储</h1>

<p>```</p>

<h1>mkdir -p /home/test/svn/trunk</h1>

<h1>svnadmin create /home/test/svn/trunk</h1>

<p>```</p>

<h1>为svn用户组赋予权限</h1>

<p>```</p>

<h1>chown -R root:svn /home/test/svn/trunk</h1>

<h1>chmod -R g+rws /home/test/svn/trunk    /<em>给svn组赋予读写权限，可以根据需要更改相应权限</em>/</h1>

<h1>chmod -R o-rwx /home/test/svn/trunk    /<em>删除其他无关人员的读、写、执行权限，默认情况下可能其他人有读权限</em>/</h1>

<p>```</p>

<!--more-->


<h1>为成员生成密钥</h1>

<p>生成密钥对：
```</p>

<h1>ssh-keygen -b 1024 -t rsa -N passwd -f testkey</h1>

<p>```
其中，passwd为密钥关键字（相当于密码），由用户自定义；testkey为密钥文件名，生成之后会产生两个文件（testkey和testkey.pub，前者为密钥，后者为公钥）；rsa指定使用rsa进行加密，如果改成dsa，则使用dsa加密。</p>

<p>创建/home/test/.ssh目录，拷贝公钥并重命名成authorized_keys：
```</p>

<h1>cp testkey.pub /home/test/.ssh/authorized_keys</h1>

<p>```
注意：文件名称必须为authorized_keys。</p>

<h1>更改资源访问权限</h1>

<p>修改/home/test/svn/trunk/conf/svnserve.conf文件，在general中加入以下几行：</p>

<p>```
[general]</p>

<p>anon-access = none // 未认证的用户没有任何访问权限   <br/>
auth-access = write // 认证的用户有写权限        <br/>
authz-db = authz // 认证文件为conf目录下的authz文件    <br/>
```</p>

<p>修改/home/test/svn/trunk/conf/authz文件（如果没有则创建），在其中加入：</p>

<p><code>
[/]       // 访问权限为本资源的根目录以及以下目录      
test = rw // test用户的访问权限为“读+写”      
</code>
还可以采用以下方法进行认证：</p>

<p>```
[groups]    <br/>
svn = test,sam // 定义用户组svn包含两个用户：test和sam</p>

<p>[/]   <br/>
@svn = rw // svn用户组的成员访问权限为“读+写”    <br/>
```</p>

<h1>启动svnserve</h1>

<p>```</p>

<h1>svnserve -d -r /home/test/svn/</h1>

<p>```</p>

<br></br>


<p><big>参考文章</big></p>

<p><a href="http://blog.csdn.net/wangjingfei/article/details/5424338">CentOS中安装subversion，并使用svn+ssh访问</a><br/>
<a href="http://blog.163.com/longsu2010@yeah/blog/static/173612348201202114212933/">linux（centos）搭建SVN服务器</a><br/>
<a href="http://zhumeng8337797.blog.163.com/blog/static/100768914201292641420400/">CentOS Linux搭建SVN Server配置详解</a><br/>
<a href="http://www.cnblogs.com/ayanmw/archive/2011/12/19/2294054.html">CentOS Linux下配置svn HTTP server</a><br/>
<a href="http://stackoverflow.com/search?q=svn%3A+E170001+%3A+Authorization+failed">svn: E170001 : Authorization failed</a><br/>
<a href="http://blog.sina.com.cn/s/blog_4b93170a0100leb2.html">解决svn Authorization failed错误</a><br/>
<a href="http://blog.csdn.net/laverock/article/details/2195290">ubuntu下架设svn服务器及在windows建立svn+ssh客户端</a><br/>
<a href="http://bbs.csdn.net/topics/310115750">svn登陆时它出现：Authorization failed</a><br/>
<a href="http://www.cyberciti.biz/faq/howto-linux-add-user-to-group/">Howto: Linux Add User To Group</a></p>
]]></content>
  </entry>
  
</feed>

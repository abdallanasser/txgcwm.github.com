<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | 残剑]]></title>
  <link href="http://txgcwm.github.io/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://txgcwm.github.io/"/>
  <updated>2014-10-11T22:02:32+08:00</updated>
  <id>http://txgcwm.github.io/</id>
  <author>
    <name><![CDATA[残剑]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Octopress的一些设置]]></title>
    <link href="http://txgcwm.github.io/blog/2014/05/17/octopressde-%5B%3F%5D-xie-she-zhi/"/>
    <updated>2014-05-17T17:13:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/05/17/octopressde-[?]-xie-she-zhi</id>
    <content type="html"><![CDATA[<h1>从新电脑上恢复博客内容</h1>

<p>如果电脑重装了系统，或者要在另一台电脑上编写博客，找到博客仓库的<code>url</code>，执行以下的指令：
```
$ git clone -b source (url) octopress   #把source 克隆到本地octopress目录上</p>

<p>$ cd octopress
$ git clone (url) _deploy   #克隆master分支，它存放着博客内容。</p>

<p>$ gem install bundler
$ bundle install
$ rake install
$ rake setup_github_pages
```</p>

<h1>网站提交到搜索引擎</h1>

<p>博客上写出的文章当然希望有人能看到，而且希望更多的人看到，这就需要让自己的博客可以在搜索引擎里面检索到，那么就需要将个人博客提交到搜索引擎，让它来抓取，所以首先要到各个搜索引擎提交自己的博客地址，<a href="http://urlc.cn/tool/addurl.html">免费收录网站搜索引擎登录口大全&mdash;搜索引擎网站收录地址大全</a>和<a href="http://tool.lusongsong.com/addurl.html">国内外各大免费搜索引擎、导航网址提交入口&mdash;搜索引擎网站收录地址大全</a>这两个地方收录了国内外各大搜索引擎的地址。</p>

<p>提交到搜索引擎后就能搜索到你的文章，但还需要做的是为你的网站文章添加描述信息、关键字，来帮助用户准确的搜索到。关键字和描述是指网页<code>head</code>部分的元标签<code>meta</code>，是给搜索引擎看的，以此希望用户可以比较容易找到。例如：
<code>
&lt;meta name="description" content="残剑是一个关注IT技术的博客"&gt;
&lt;meta name="keywords" content="IT, 编程, 码农的自嘲"&gt;
</code></p>

<p>首先为每篇文章添加描述和关键字，本文的文件头如下：</p>

<h2>```</h2>

<p>layout: post
title: &ldquo;Octopress的一些设置&rdquo;
date: 2014-05-17 17:13
comments: true
categories: [Octopress]
tags: [Octopress, 博客恢复, SEO]
keywords: Seo, Octopress</p>

<h2>description: Octopress的SEO技巧，在新电脑上恢复博客内容。</h2>

<p>```</p>

<!--more-->


<p>这样就可以为文章添加关键字和描述，使搜索引擎更容易搜到你的文章。还可以为你的博客首页添加描述和关键字，在<code>source/index.html</code>文件顶部添加即可,方法如上。</p>

<p>如果你没有为文章添加描述，Octopress会自动以文章的前150个字符作为描述，为每一篇文章都添加描述，Octopress模板实现以上功能的代码在<code>source/_includes/head.html</code>中：
<code>

  &lt;meta name="description" content="Category: Octopress"&gt;

</code></p>

<p>在使用<code>rake new_post</code>的时候，我们当然希望在文件的开头加入tags、keywords、description这些选项，那么就需要修改<code>Rakefile</code>文件。
```</p>

<h1>usage rake new_post[my-new-post] or rake new_post[&lsquo;my new post&rsquo;] or rake new_post (defaults to &ldquo;new-post&rdquo;)</h1>

<p>desc &ldquo;Begin a new post in #{source_dir}/#{posts_dir}&rdquo;
task :new_post, :title do |t, args|
  if args.title</p>

<pre><code>title = args.title
</code></pre>

<p>  else</p>

<pre><code>title = get_stdin("Enter a title for your post: ")
</code></pre>

<p>  end
  raise &ldquo;### You haven&rsquo;t set anything up yet. First run <code>rake install</code> to set up an Octopress theme.&rdquo; unless File.directory?(source_dir)
  mkdir_p &ldquo;#{source_dir}/#{posts_dir}&rdquo;
  filename = &ldquo;#{source_dir}/#{posts_dir}/#{Time.now.strftime(&lsquo;%Y-%m-%d&rsquo;)}&ndash;#{title.to_url}.#{new_post_ext}&rdquo;
  if File.exist?(filename)</p>

<pre><code>abort("rake aborted!") if ask("#{filename} already exists. Do you want to overwrite?", ['y', 'n']) == 'n'
</code></pre>

<p>  end
  puts &ldquo;Creating new post: #{filename}&rdquo;
  open(filename, &lsquo;w&rsquo;) do |post|</p>

<pre><code>post.puts "---"
post.puts "layout: post"
post.puts "title: \"#{title.gsub(/&amp;/,'&amp;amp;')}\""
post.puts "date: #{Time.now.strftime('%Y-%m-%d %H:%M')}"
post.puts "comments: true"
post.puts "categories: []"
post.puts "tags: []"
post.puts "keywords: " 
post.puts "description: "
post.puts "---"
</code></pre>

<p>  end
end
```</p>

<h1>为博客添加背景图片</h1>

<p>Octopress支持SASS语法，改造Octopress主题基本是通过修改<code>sass/custom</code>下以scss为后缀名的文件来完成，大多数的改造是在<code>_styles.scss</code>这个文件中来实现。我的配置如下：
```
// This File is imported last, and will override other styles in the cascade
// Add styles here to make changes without digging in too much</p>

<p>/<em> &mdash;&mdash;&ndash; main layout &mdash;&mdash;&ndash; </em>/
html { background: #262C33 url(&ldquo;/images/bg.png&rdquo;); }</p>

<p>body { font-size: 1.2em; }</p>

<p>body > div { background-image: none; }</p>

<p>body > div > div { background-image: none; }</p>

<p>/<em> &mdash;&mdash;&ndash; header &mdash;&mdash;&ndash; </em>/
body > header{</p>

<pre><code>background: none;
padding: 1.6em 0 1em 0
</code></pre>

<p>}</p>

<p>body > header h1{</p>

<pre><code>font-size: 2.8em;
padding-left: 20px;
text-shadow: rgba(0, 0, 0, 0.8) 0 0 8px;
</code></pre>

<p>}</p>

<p>body > header h2{</p>

<pre><code>font-size: 1em;
letter-spacing: 1px;
margin-top: 0em;
padding-left: 20px;
</code></pre>

<p>}</p>

<p>body > nav {</p>

<pre><code>padding-top: .15em;
padding-bottom: .15em;
</code></pre>

<p>}</p>

<p>body > nav a{</p>

<pre><code>font-size: 1.2em;
line-height: 1.4em;
</code></pre>

<p>}</p>

<p>body > nav form .search{</p>

<pre><code>padding: .2em .3em;
</code></pre>

<p>}</p>

<p>/<em> &mdash;&mdash;&ndash; Content &mdash;&mdash;&ndash; </em>/</p>

<h1>content .blog-index article h1 {</h1>

<pre><code>font-size: 2em;
font-weight: normal;
</code></pre>

<p>}</p>

<h1>content .blog-index article h1, #content .blog-index article h1 a, article header h1, article header h1 a{</h1>

<pre><code>color: #555555 !important;
</code></pre>

<p>}</p>

<p>h1 { font-size: 1.8em; }</p>

<p>h1 span{</p>

<pre><code>font-weight: normal;
color: #E0841B;
</code></pre>

<p>}</p>

<p>article h2, article h3, article header h1{</p>

<pre><code>font-weight: normal;
</code></pre>

<p>}</p>

<p>.blog-index article h1 a:hover{ text-decoration: none; }</p>

<p>article p {</p>

<pre><code>text-align:justify;
margin-bottom: 1em;
</code></pre>

<p>}</p>

<p>/<em> &mdash;&mdash;&ndash; Sidebar &mdash;&mdash;&ndash; </em>/
aside.sidebar section h1 { letter-spacing: 0.1em; }</p>

<p>aside.sidebar a { text-decoration: none; }</p>

<p>.toggle-sidebar{display: none;}</p>

<p>ul#gh_repos > li > a{</p>

<pre><code>display: block;
font-weight: bold;
margin-bottom: 0.4em;
</code></pre>

<p>}</p>

<p>aside.sidebar{</p>

<pre><code>-moz-border-radius-topright: 0.4em;
-webkit-border-radius: 0 0.4em 0 0;
border-radius: 0 0.4em 0 0;
</code></pre>

<p>}</p>

<p>/<em> &mdash;&mdash;&ndash; Footer &mdash;&mdash;&ndash; </em>/
body > footer{</p>

<pre><code>-moz-border-radius: 0;
-webkit-border-radius: 0;
border-radius:0;
margin-bottom: 0;
</code></pre>

<p>}</p>

<p>/<em> &mdash;&mdash;&ndash; 404 &mdash;&mdash;&ndash; </em>/
.notfound404 article{</p>

<pre><code>margin-left: 0 !important;
</code></pre>

<p>}</p>

<p>/<em> &mdash;&mdash;&ndash; Media queries &mdash;&mdash;&ndash; </em>/
@media only screen and (min-width: 1040px) {</p>

<pre><code>body &gt; nav {
  -moz-border-radius: 0.4em;
  -webkit-border-radius: 0.4em;
  border-radius:0.4em;
  margin-bottom: 2em;
}

body &gt; footer{
    -moz-border-radius-bottomleft: 0.4em;
    -moz-border-radius-bottomright: 0.4em;
    -webkit-border-radius: 0 0 0.4em 0.4em;
    border-radius: 0 0 0.4em 0.4em;
}

#main{
    -moz-border-radius-topleft: 0.4em;
    -moz-border-radius-topright: 0.4em;
    -webkit-border-radius: 0.4em 0.4em 0 0;
    border-radius: 0.4em 0.4em 0 0;
}

#content{
    -moz-border-radius-topleft: 0.4em;
    -webkit-border-radius: 0.4em 0 0 0;
    border-radius: 0.4em 0 0 0;
}

#content .blog-index a[rel="full-article"]{
    -webkit-border-radius: 6px;
    -moz-border-radius: 6px;
    border-radius: 6px;
}
</code></pre>

<p>}
```</p>

<p><big>参考文章</big></p>

<p><a href="http://blog.csdn.net/grunmin/article/details/14127653">octopress博客搭建和个性化配置</a> <br/>
<a href="http://blog.csdn.net/lcliliil/article/details/13727927">Octopress添加统计与SEO</a> <br/>
<a href="http://www.cnblogs.com/hswg/archive/2013/01/15/2860952.html">Octopress技巧之设置关键字和描述</a> <br/>
<a href="http://larrynung.github.io/2013/11/21/octopress-seo-for-octopress-website/">Octopress &ndash; SEO for Octopress website</a> <br/>
<a href="http://shanewfx.github.io/blog/2012/08/13/improve-blog-theme/">Octopress主题改造</a><br/>
<a href="http://colors4.us/blog/2012/09/05/octopress-theme-adjusting/">调整octopress主题小结</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress安装Slash主题及恢复]]></title>
    <link href="http://txgcwm.github.io/blog/2014/05/17/octopressan-zhuang-slashzhu-ti-ji-hui-fu/"/>
    <updated>2014-05-17T16:14:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/05/17/octopressan-zhuang-slashzhu-ti-ji-hui-fu</id>
    <content type="html"><![CDATA[<p>输入以下的指令，就能立马体验Slash。
<code>
$ cd octopress
$ git clone git://github.com/tommy351/Octopress-Theme-Slash.git .themes/slash
$ rake install['slash']
$ rake generate
</code></p>

<p>安装完之后，我就后悔了，虽然主题看起来更好看，可没有之前使用的那般便利，幸好我没有直接将它上传到<code>github</code>上，只是执行<code>rake preview</code>指令提前在本机上运行了一下。不过还是有遗憾的，一些配置因安装新的主题被覆盖了，所以在安装之前提前备份是非常有必要的工作。</p>

<p>新的主题安装在<code>.themes</code>目录下，可以看到新安装的主题，也能看到<code>Octopress</code>默认的主题<code>classic</code>。
<code>
$ ls .themes/
classic  slash
</code></p>

<!--more-->


<p>既然不喜欢，就得恢复到原来的主题，使用以下的指令即可。
<code>
$ rake install['classic']
$ rake generate
</code></p>

<p>今天查阅资料最大的收获是知道了<code>Octopress生成静态文件后直接发布</code>的命令：
<code>
$ rake gen_deploy
</code></p>

<p><big>参考文章</big></p>

<p><a href="http://zespia.tw/Octopress-Theme-Slash/index_tw.html">Octopress-Theme-Slash</a><br/>
<a href="http://fancyoung.com/blog/octopress-study/">技术博客利器——Octopress</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress添加统计]]></title>
    <link href="http://txgcwm.github.io/blog/2014/05/11/octopresstian-jia-tong-ji/"/>
    <updated>2014-05-11T01:00:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/05/11/octopresstian-jia-tong-ji</id>
    <content type="html"><![CDATA[<p>Octopress模板里面默认带了Google Analytics工具，只需要注册Google Analytics， 获得一个<code>google_analytics_tracking_id</code>，添加到<code>_config.yml</code>中对应位置，并对网站进行验证即可，这样就可以通过Google Analytics分析网站的流量了，而且可以使用Google站长工具对网站进行更全面的分析，进行SEO。</p>

<p>对自己的网站进行验证，只需将网站提供的用于验证的代码添加到<code>source/_includes/head.html</code>的<code>head</code>标签之间（注意：如果该文件已有<code>{ % include google_analytics.html % }</code>这句，那么这步就不需要了），网站部署到网上后，过几分钟即可验证通过，其它需要验证的也同样操作。</p>

<p>除了Google的统计工具，还有就是国内使用很广的CNZZ了，注册后添加并验证你的网站就可以添加统计代码了，选好自己喜欢的样式获得代码，可添加到<code>source/_includes/custom/footer.html</code>中，即可查看每天博客的流量，进行相应的优化了。</p>

<p>百度站长工具和百度统计的使用方法和CNZZ类似 ，统计代码也可以添加到<code>source/_includes/custom/footer.html</code>中。</p>

<p><big>参考文章</big></p>

<p><a href="http://blog.csdn.net/lcliliil/article/details/13727927">Octopress添加统计与SEO</a><br/>
<a href="http://blog.dofa.org/blog/2014/03/10/add-statistics-for-octopress/">使用Google Analytics统计工具</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress添加二维码展示和返回顶部按钮]]></title>
    <link href="http://txgcwm.github.io/blog/2014/05/09/octopresstian-jia-er-wei-ma-zhan-shi-he-fan-hui-ding-bu-an-niu/"/>
    <updated>2014-05-09T22:37:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2014/05/09/octopresstian-jia-er-wei-ma-zhan-shi-he-fan-hui-ding-bu-an-niu</id>
    <content type="html"><![CDATA[<h1>二维码展示</h1>

<p>在关于页面或边栏可以展示个人博客的二维码，方便移动终端扫描访问，插件主页点击<a href="https://github.com/sailor79/Octopress-dynamic-QR-Code-aside">这里</a>。
```
<section></p>

<pre><code>&lt;h1&gt;QR-Code&lt;abbr title="The word 'QR Code' is a registered trademark of DENSO WAVE INCORPORATED. It applies only for the word 'QR Code', not for image."&gt;&amp;trade;&lt;/abbr&gt;&lt;/h1&gt;
&lt;a href="http://txgcwm.github.ioblog/categories/octopress/atom.xml"&gt;&lt;img src="http://chart.apis.google.com/chart?chs=180x180&amp;cht=qr&amp;chld=|0&amp;chco=165B94&amp;chl=http://txgcwm.github.ioblog/categories/octopress/atom.xml" alt="post-qrcode"&gt;&lt;/a&gt;
</code></pre>

<p></section>
<code>``
在侧边栏显示，则将</code>qrcode.html<code>放入</code>source/<em>includes/custom/asides/<code>中，在</code></em>config.yml<code>中</code>default_asides<code>添加</code>custom/asides/qrcode.html<code>即可显示。或者将</code>qrcode.html`代码添加到想展示页面的HTML文件中。</p>

<!--more-->


<h1>滑动返回顶部按钮</h1>

<p>文章较长的情况，通常希望有一个返回顶部的按钮。如下方法实现了在页面右下方添加一个返回顶部的图片按钮，点击后可以滑动的返回顶部。</p>

<h2>方法一</h2>

<p>首先创建<code>source/javascripts/top.js</code>，实现滑动返回顶部效果，添加如下代码：
```
function goTop(acceleration, time) {</p>

<pre><code>acceleration = acceleration || 0.1;
time = time || 16;

var x1 = 0;
var y1 = 0;
var x2 = 0;
var y2 = 0;
var x3 = 0;
var y3 = 0;

if (document.documentElement) {
    x1 = document.documentElement.scrollLeft || 0;
    y1 = document.documentElement.scrollTop || 0;
}

if (document.body) {
    x2 = document.body.scrollLeft || 0;
    y2 = document.body.scrollTop || 0;
}

var x3 = window.scrollX || 0;
var y3 = window.scrollY || 0;

var x = Math.max(x1, Math.max(x2, x3));
var y = Math.max(y1, Math.max(y2, y3));

var speed = 1 + acceleration;
window.scrollTo(Math.floor(x / speed), Math.floor(y / speed));

if(x &gt; 0 || y &gt; 0) {
    var invokeFunction = "goTop(" + acceleration + ", " + time + ")";
    window.setTimeout(invokeFunction, time);
}
</code></pre>

<p>}
```</p>

<p>接着创建<code>source/_includes/custom/totop.html</code>，设置返回顶部按钮样式和位置，代码如下：
```</p>

<!--返回顶部开始-->


<div id="full" style="width:0px; height:0px; position:fixed; right:180px; bottom:150px; z-index:100; text-align:center; background-color:transparent; cursor:pointer;">
    <a href="#" onclick="goTop();return false;"><img src="http://txgcwm.github.io/images/top.png" border=0 alt="返回顶部"></a>
</div>


<script src="http://txgcwm.github.io/javascripts/top.js" type="text/javascript"></script>


<!--返回顶部结束-->


<p>```</p>

<p>然后还需要将返回顶部的图片放入<code>source/images</code>，命名为<code>top.png</code>，或修改<code>totop.html</code>中的图片路径。</p>

<p>最后还需要在<code>source/_layouts/default.html</code>中添加<code>{ % include custom/totop.html % }</code>（这个在很多教程里都没有提到，对于一个不懂前端的人摸索了好久才整出来）。</p>

<h2>方法二</h2>

<p>对于方式一，滑动按钮一直存在着，在顶部的时候看着也不爽，所以使用了另外的一种方式。相关的HTML代码很简单，在<code>source/_include/custom/footer.html</code>中添加如下代码：</p>

<p>```</p>

<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.3/jquery.min.js"></script>




<script type="text/javascript">
$(document).ready(function(){

    // hide #back-top first
    $("#back-top").hide();
    
    // fade in #back-top
    $(function () {
        $(window).scroll(function () {
            if ($(this).scrollTop() > 100) {
                $('#back-top').fadeIn();
            } else {
                $('#back-top').fadeOut();
            }
        });

        // scroll body to 0px on click
        $('#back-top a').click(function () {
            $('body,html').animate({
                scrollTop: 0
            }, 800);
            return false;
        });
    });

});
</script>








<p id="back-top">
    <a href="#top"><span></span></a>
</p>




<p>
  Copyright &copy; 2014 - 残剑 -
  <span class="credit">Powered by <a href="http://octopress.org">Octopress</a></span>
</p>


<p>```</p>

<h1>参考文章</h1>

<p><a href="http://blog.csdn.net/lcliliil/article/details/13727007">Octopress主题样式修改</a><br/>
<a href="http://www.neoease.com/javascript-go-top/">用 JavaScript 实现变速回到顶部</a><br/>
<a href="http://www.neoease.com/fixed-go-top-button-to-browser-window-with-jquery/">jQuery 跟随浏览器窗口的回到顶部按钮</a><br/>
<a href="http://ibillxia.github.io/blog/2013/06/30/add-a-back-to-top-button-on-ur-octpress-blog/">给Octpress博客添加返回顶部按钮</a><br/>
<a href="http://webdesignerwall.com/tutorials/animated-scroll-to-top">Animated Scroll to Top</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress添加表格]]></title>
    <link href="http://txgcwm.github.io/blog/2013/07/27/octopresstian-jia-biao-ge/"/>
    <updated>2013-07-27T15:08:00+08:00</updated>
    <id>http://txgcwm.github.io/blog/2013/07/27/octopresstian-jia-biao-ge</id>
    <content type="html"><![CDATA[<p>Markdown语法为“方便在网上读文章、写文章、修改文章更容易”这一目标而生。它不是HTML的替代品，也不是为了终结HTML。它的语法非常简单，只相当于HTML标签的一个非常非常小的子集。它并非是为了更容易输入HTML标签而创造一种新语法。HTML是一种适合发表的格式；而Markdown是一种书写格式。正因如此，Markdown的格式化语法仅需解决用纯文本表达的问题。</p>

<p>下面的这个例子是在一篇Markdown文章中添加一个HTML表格：
```</p>

<table>
    <tr>
        <td>Column1</td>
        <td>Column2</td>
    </tr>
    <tr>
        <td>foo</td>
        <td>foo</td>
    </tr>
</table>


<p>  <br/>
```</p>

<!--more-->




<table>
    <tr>
        <td>Column1</td>
        <td>Column2</td>
    </tr>
    <tr>
        <td>foo</td>
        <td>foo</td>
    </tr>
</table>


<p></p>

<p>也可以使用markdown的扩展语法添加一个表格：</p>

<p><code>
Column1     | Column2      
----------- | ------------
foo         | foo
</code></p>

<p>但使用html语法做一个表格很麻烦，而且看起来也不是很美观。使用markdown语法做出来的表格却没有边框。所以需要重新做一些设定，以下为设置和更改的方法。</p>

<p>Step 1. 在source/stylesheets/目录下增加data-table.css文件，添加如下内容：
```
* + table {</p>

<pre><code>border-style:solid;
border-width:1px;
border-color:#e7e3e7;
</code></pre>

<p>}</p>

<ul>
<li><ul>
<li>table th, * + table td {
border-style:dashed;
border-width:1px;
border-color:#e7e3e7;
padding-left: 3px;
padding-right: 3px;
}</li>
</ul>
</li>
<li><ul>
<li>table th {
border-style:solid;
font-weight:bold;
background: url(&ldquo;/images/noise.png?1330434582&rdquo;) repeat scroll left top #F7F3F7;
}</li>
</ul>
</li>
<li><ul>
<li>table th[align=&ldquo;left&rdquo;], * + table td[align=&ldquo;left&rdquo;] {
text-align:left;
}</li>
</ul>
</li>
<li><ul>
<li>table th[align=&ldquo;right&rdquo;], * + table td[align=&ldquo;right&rdquo;] {
text-align:right;
}</li>
</ul>
</li>
<li><ul>
<li>table th[align=&ldquo;center&rdquo;], * + table td[align=&ldquo;center&rdquo;] {
text-align:center;
}
```</li>
</ul>
</li>
</ul>


<p>Step 2. 添加link到head.html中，在source/_includes/head.html文件中插入如下语句：
<code>
&lt;link href="http://txgcwm.github.io/stylesheets/data-table.css" media="screen, projection" rel="stylesheet" type="text/css" /&gt;
</code></p>

<p>重新设定后，表格样式如下：</p>

<table>
<thead>
<tr>
<th>Column1     </th>
<th> Column2      </th>
</tr>
</thead>
<tbody>
<tr>
<td>foo         </td>
<td> foo</td>
</tr>
</tbody>
</table>


<br></br>


<p><big>参考文章:</big> <br/>
<a href="http://samwize.com/2012/09/24/octopress-table-stylesheet/">Octopress Table Stylesheet</a><br/>
<a href="http://jhjguxin.github.io/blog/2012/04/24/markdownyu-fa/">Markdown语法</a></p>
]]></content>
  </entry>
  
</feed>
